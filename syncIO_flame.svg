<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="710" onload="init(evt)" viewBox="0 0 1200 710" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="710.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="693" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="693" > </text>
<g id="frames">
<g >
<title>__lll_unlock_wake (3 samples, 0.50%)</title><rect x="10.0" y="549" width="5.9" height="15.0" fill="rgb(228,221,49)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>sys_recvfrom (1 samples, 0.17%)</title><rect x="538.6" y="597" width="2.0" height="15.0" fill="rgb(233,182,9)" rx="2" ry="2" />
<text  x="541.62" y="607.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.17%)</title><rect x="538.6" y="485" width="2.0" height="15.0" fill="rgb(234,71,35)" rx="2" ry="2" />
<text  x="541.62" y="495.5" ></text>
</g>
<g >
<title>futex_wake (2 samples, 0.34%)</title><rect x="526.7" y="437" width="4.0" height="15.0" fill="rgb(229,187,35)" rx="2" ry="2" />
<text  x="529.74" y="447.5" ></text>
</g>
<g >
<title>[libc-2.17.so] (12 samples, 2.01%)</title><rect x="1166.2" y="597" width="23.8" height="15.0" fill="rgb(228,186,3)" rx="2" ry="2" />
<text  x="1169.24" y="607.5" >[..</text>
</g>
<g >
<title>do_futex (3 samples, 0.50%)</title><rect x="10.0" y="501" width="5.9" height="15.0" fill="rgb(220,52,14)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::lock (1 samples, 0.17%)</title><rect x="1164.3" y="549" width="1.9" height="15.0" fill="rgb(252,114,49)" rx="2" ry="2" />
<text  x="1167.26" y="559.5" ></text>
</g>
<g >
<title>ip_output (68 samples, 11.41%)</title><rect x="544.6" y="341" width="134.6" height="15.0" fill="rgb(227,19,40)" rx="2" ry="2" />
<text  x="547.56" y="351.5" >ip_output</text>
</g>
<g >
<title>__netif_receive_skb_core (67 samples, 11.24%)</title><rect x="546.5" y="181" width="132.7" height="15.0" fill="rgb(226,50,47)" rx="2" ry="2" />
<text  x="549.54" y="191.5" >__netif_receive_..</text>
</g>
<g >
<title>link_path_walk (3 samples, 0.50%)</title><rect x="516.8" y="357" width="6.0" height="15.0" fill="rgb(233,25,54)" rx="2" ry="2" />
<text  x="519.85" y="367.5" ></text>
</g>
<g >
<title>net_rx_action (67 samples, 11.24%)</title><rect x="546.5" y="229" width="132.7" height="15.0" fill="rgb(211,45,50)" rx="2" ry="2" />
<text  x="549.54" y="239.5" >net_rx_action</text>
</g>
<g >
<title>do_softirq (68 samples, 11.41%)</title><rect x="544.6" y="277" width="134.6" height="15.0" fill="rgb(210,206,10)" rx="2" ry="2" />
<text  x="547.56" y="287.5" >do_softirq</text>
</g>
<g >
<title>skb_release_all (1 samples, 0.17%)</title><rect x="538.6" y="501" width="2.0" height="15.0" fill="rgb(233,195,49)" rx="2" ry="2" />
<text  x="541.62" y="511.5" ></text>
</g>
<g >
<title>sys_futex (55 samples, 9.23%)</title><rect x="21.9" y="517" width="108.9" height="15.0" fill="rgb(232,133,6)" rx="2" ry="2" />
<text  x="24.88" y="527.5" >sys_futex</text>
</g>
<g >
<title>wake_up_q (2 samples, 0.34%)</title><rect x="12.0" y="469" width="3.9" height="15.0" fill="rgb(228,11,41)" rx="2" ry="2" />
<text  x="14.98" y="479.5" ></text>
</g>
<g >
<title>tcp_prequeue (66 samples, 11.07%)</title><rect x="548.5" y="85" width="130.7" height="15.0" fill="rgb(206,29,3)" rx="2" ry="2" />
<text  x="551.52" y="95.5" >tcp_prequeue</text>
</g>
<g >
<title>filename_lookup (3 samples, 0.50%)</title><rect x="516.8" y="389" width="6.0" height="15.0" fill="rgb(216,159,9)" rx="2" ry="2" />
<text  x="519.85" y="399.5" ></text>
</g>
<g >
<title>ipv4_conntrack_local (1 samples, 0.17%)</title><rect x="542.6" y="293" width="2.0" height="15.0" fill="rgb(247,141,28)" rx="2" ry="2" />
<text  x="545.58" y="303.5" ></text>
</g>
<g >
<title>__inode_security_revalidate (1 samples, 0.17%)</title><rect x="679.2" y="453" width="2.0" height="15.0" fill="rgb(240,208,20)" rx="2" ry="2" />
<text  x="682.19" y="463.5" ></text>
</g>
<g >
<title>call_softirq (1 samples, 0.17%)</title><rect x="1162.3" y="405" width="2.0" height="15.0" fill="rgb(246,175,36)" rx="2" ry="2" />
<text  x="1165.28" y="415.5" ></text>
</g>
<g >
<title>system_call_fastpath (55 samples, 9.23%)</title><rect x="21.9" y="533" width="108.9" height="15.0" fill="rgb(224,7,20)" rx="2" ry="2" />
<text  x="24.88" y="543.5" >system_call_f..</text>
</g>
<g >
<title>system_call_fastpath (4 samples, 0.67%)</title><rect x="516.8" y="485" width="8.0" height="15.0" fill="rgb(249,106,12)" rx="2" ry="2" />
<text  x="519.85" y="495.5" ></text>
</g>
<g >
<title>getname_flags (1 samples, 0.17%)</title><rect x="522.8" y="389" width="2.0" height="15.0" fill="rgb(237,118,17)" rx="2" ry="2" />
<text  x="525.79" y="399.5" ></text>
</g>
<g >
<title>call_softirq (68 samples, 11.41%)</title><rect x="544.6" y="261" width="134.6" height="15.0" fill="rgb(240,1,26)" rx="2" ry="2" />
<text  x="547.56" y="271.5" >call_softirq</text>
</g>
<g >
<title>inet_sendmsg (70 samples, 11.74%)</title><rect x="540.6" y="469" width="138.6" height="15.0" fill="rgb(249,222,45)" rx="2" ry="2" />
<text  x="543.60" y="479.5" >inet_sendmsg</text>
</g>
<g >
<title>system_call_fastpath (243 samples, 40.77%)</title><rect x="683.2" y="565" width="481.1" height="15.0" fill="rgb(247,118,30)" rx="2" ry="2" />
<text  x="686.15" y="575.5" >system_call_fastpath</text>
</g>
<g >
<title>__audit_syscall_exit (1 samples, 0.17%)</title><rect x="1168.2" y="565" width="2.0" height="15.0" fill="rgb(248,68,3)" rx="2" ry="2" />
<text  x="1171.22" y="575.5" ></text>
</g>
<g >
<title>nf_hook_slow (2 samples, 0.34%)</title><rect x="540.6" y="325" width="4.0" height="15.0" fill="rgb(214,219,50)" rx="2" ry="2" />
<text  x="543.60" y="335.5" ></text>
</g>
<g >
<title>system_call_after_swapgs (1 samples, 0.17%)</title><rect x="536.6" y="613" width="2.0" height="15.0" fill="rgb(219,143,24)" rx="2" ry="2" />
<text  x="539.64" y="623.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.17%)</title><rect x="1162.3" y="469" width="2.0" height="15.0" fill="rgb(210,191,53)" rx="2" ry="2" />
<text  x="1165.28" y="479.5" ></text>
</g>
<g >
<title>ep_poll (10 samples, 1.68%)</title><rect x="1170.2" y="549" width="19.8" height="15.0" fill="rgb(232,21,13)" rx="2" ry="2" />
<text  x="1173.20" y="559.5" ></text>
</g>
<g >
<title>selinux_inode_permission (2 samples, 0.34%)</title><rect x="518.8" y="293" width="4.0" height="15.0" fill="rgb(211,50,28)" rx="2" ry="2" />
<text  x="521.83" y="303.5" ></text>
</g>
<g >
<title>try_to_wake_up (2 samples, 0.34%)</title><rect x="12.0" y="453" width="3.9" height="15.0" fill="rgb(245,69,4)" rx="2" ry="2" />
<text  x="14.98" y="463.5" ></text>
</g>
<g >
<title>local_bh_enable (68 samples, 11.41%)</title><rect x="544.6" y="309" width="134.6" height="15.0" fill="rgb(210,117,50)" rx="2" ry="2" />
<text  x="547.56" y="319.5" >local_bh_enable</text>
</g>
<g >
<title>_IO_no_init (1 samples, 0.17%)</title><rect x="530.7" y="613" width="2.0" height="15.0" fill="rgb(239,137,27)" rx="2" ry="2" />
<text  x="533.70" y="623.5" ></text>
</g>
<g >
<title>SYSC_recvfrom (1 samples, 0.17%)</title><rect x="538.6" y="581" width="2.0" height="15.0" fill="rgb(233,46,23)" rx="2" ry="2" />
<text  x="541.62" y="591.5" ></text>
</g>
<g >
<title>threadpool&lt;http_conn&gt;::worker (263 samples, 44.13%)</title><rect x="10.0" y="565" width="520.7" height="15.0" fill="rgb(218,160,30)" rx="2" ry="2" />
<text  x="13.00" y="575.5" >threadpool&lt;http_conn&gt;::worker</text>
</g>
<g >
<title>__libc_start_main (328 samples, 55.03%)</title><rect x="540.6" y="629" width="649.4" height="15.0" fill="rgb(238,59,29)" rx="2" ry="2" />
<text  x="543.60" y="639.5" >__libc_start_main</text>
</g>
<g >
<title>__wake_up_sync_key (66 samples, 11.07%)</title><rect x="548.5" y="69" width="130.7" height="15.0" fill="rgb(250,18,38)" rx="2" ry="2" />
<text  x="551.52" y="79.5" >__wake_up_sync_key</text>
</g>
<g >
<title>sys_writev (71 samples, 11.91%)</title><rect x="540.6" y="549" width="140.6" height="15.0" fill="rgb(227,153,6)" rx="2" ry="2" />
<text  x="543.60" y="559.5" >sys_writev</text>
</g>
<g >
<title>__audit_syscall_exit (2 samples, 0.34%)</title><rect x="15.9" y="533" width="4.0" height="15.0" fill="rgb(237,33,38)" rx="2" ry="2" />
<text  x="18.94" y="543.5" ></text>
</g>
<g >
<title>inet_recvmsg (1 samples, 0.17%)</title><rect x="538.6" y="549" width="2.0" height="15.0" fill="rgb(221,133,0)" rx="2" ry="2" />
<text  x="541.62" y="559.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1 samples, 0.17%)</title><rect x="522.8" y="373" width="2.0" height="15.0" fill="rgb(217,95,49)" rx="2" ry="2" />
<text  x="525.79" y="383.5" ></text>
</g>
<g >
<title>http_conn::process_read (5 samples, 0.84%)</title><rect x="514.9" y="517" width="9.9" height="15.0" fill="rgb(205,216,4)" rx="2" ry="2" />
<text  x="517.87" y="527.5" ></text>
</g>
<g >
<title>SYSC_newstat (4 samples, 0.67%)</title><rect x="516.8" y="453" width="8.0" height="15.0" fill="rgb(233,171,3)" rx="2" ry="2" />
<text  x="519.85" y="463.5" ></text>
</g>
<g >
<title>sys_futex (243 samples, 40.77%)</title><rect x="683.2" y="549" width="481.1" height="15.0" fill="rgb(218,78,34)" rx="2" ry="2" />
<text  x="686.15" y="559.5" >sys_futex</text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (242 samples, 40.60%)</title><rect x="683.2" y="469" width="479.1" height="15.0" fill="rgb(222,6,50)" rx="2" ry="2" />
<text  x="686.15" y="479.5" >_raw_spin_unlock_irqrestore</text>
</g>
<g >
<title>__wake_up_common_lock (66 samples, 11.07%)</title><rect x="548.5" y="53" width="130.7" height="15.0" fill="rgb(237,112,29)" rx="2" ry="2" />
<text  x="551.52" y="63.5" >__wake_up_common..</text>
</g>
<g >
<title>user_path_at (4 samples, 0.67%)</title><rect x="516.8" y="421" width="8.0" height="15.0" fill="rgb(240,74,23)" rx="2" ry="2" />
<text  x="519.85" y="431.5" ></text>
</g>
<g >
<title>try_to_wake_up (2 samples, 0.34%)</title><rect x="526.7" y="405" width="4.0" height="15.0" fill="rgb(221,61,23)" rx="2" ry="2" />
<text  x="529.74" y="415.5" ></text>
</g>
<g >
<title>ipt_do_table (1 samples, 0.17%)</title><rect x="540.6" y="293" width="2.0" height="15.0" fill="rgb(235,121,10)" rx="2" ry="2" />
<text  x="543.60" y="303.5" ></text>
</g>
<g >
<title>vfs_writev (71 samples, 11.91%)</title><rect x="540.6" y="533" width="140.6" height="15.0" fill="rgb(248,194,2)" rx="2" ry="2" />
<text  x="543.60" y="543.5" >vfs_writev</text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.17%)</title><rect x="1164.3" y="517" width="1.9" height="15.0" fill="rgb(251,127,41)" rx="2" ry="2" />
<text  x="1167.26" y="527.5" ></text>
</g>
<g >
<title>__schedule (55 samples, 9.23%)</title><rect x="21.9" y="437" width="108.9" height="15.0" fill="rgb(219,173,36)" rx="2" ry="2" />
<text  x="24.88" y="447.5" >__schedule</text>
</g>
<g >
<title>security_file_permission (1 samples, 0.17%)</title><rect x="679.2" y="485" width="2.0" height="15.0" fill="rgb(205,127,14)" rx="2" ry="2" />
<text  x="682.19" y="495.5" ></text>
</g>
<g >
<title>pthread_cond_wait@@GLIBC_2.3.2 (58 samples, 9.73%)</title><rect x="15.9" y="549" width="114.9" height="15.0" fill="rgb(229,164,31)" rx="2" ry="2" />
<text  x="18.94" y="559.5" >pthread_cond_w..</text>
</g>
<g >
<title>tcp_v4_rcv (66 samples, 11.07%)</title><rect x="548.5" y="101" width="130.7" height="15.0" fill="rgb(230,124,43)" rx="2" ry="2" />
<text  x="551.52" y="111.5" >tcp_v4_rcv</text>
</g>
<g >
<title>system_call_fastpath (10 samples, 1.68%)</title><rect x="1170.2" y="581" width="19.8" height="15.0" fill="rgb(240,66,28)" rx="2" ry="2" />
<text  x="1173.20" y="591.5" ></text>
</g>
<g >
<title>ip_rcv (67 samples, 11.24%)</title><rect x="546.5" y="165" width="132.7" height="15.0" fill="rgb(213,137,46)" rx="2" ry="2" />
<text  x="549.54" y="175.5" >ip_rcv</text>
</g>
<g >
<title>ip_rcv_finish (67 samples, 11.24%)</title><rect x="546.5" y="149" width="132.7" height="15.0" fill="rgb(235,221,50)" rx="2" ry="2" />
<text  x="549.54" y="159.5" >ip_rcv_finish</text>
</g>
<g >
<title>hash_conntrack_raw (1 samples, 0.17%)</title><rect x="542.6" y="261" width="2.0" height="15.0" fill="rgb(205,220,21)" rx="2" ry="2" />
<text  x="545.58" y="271.5" ></text>
</g>
<g >
<title>sys_futex (2 samples, 0.34%)</title><rect x="526.7" y="469" width="4.0" height="15.0" fill="rgb(231,100,46)" rx="2" ry="2" />
<text  x="529.74" y="479.5" ></text>
</g>
<g >
<title>__libc_recv (2 samples, 0.34%)</title><rect x="536.6" y="629" width="4.0" height="15.0" fill="rgb(240,101,8)" rx="2" ry="2" />
<text  x="539.64" y="639.5" ></text>
</g>
<g >
<title>sys_epoll_ctl (194 samples, 32.55%)</title><rect x="130.8" y="485" width="384.1" height="15.0" fill="rgb(230,179,33)" rx="2" ry="2" />
<text  x="133.77" y="495.5" >sys_epoll_ctl</text>
</g>
<g >
<title>avc_has_perm_noaudit (1 samples, 0.17%)</title><rect x="520.8" y="277" width="2.0" height="15.0" fill="rgb(207,144,20)" rx="2" ry="2" />
<text  x="523.81" y="287.5" ></text>
</g>
<g >
<title>ip_finish_output (68 samples, 11.41%)</title><rect x="544.6" y="325" width="134.6" height="15.0" fill="rgb(209,31,34)" rx="2" ry="2" />
<text  x="547.56" y="335.5" >ip_finish_output</text>
</g>
<g >
<title>__inode_permission (3 samples, 0.50%)</title><rect x="516.8" y="325" width="6.0" height="15.0" fill="rgb(228,124,31)" rx="2" ry="2" />
<text  x="519.85" y="335.5" ></text>
</g>
<g >
<title>http_conn::process (200 samples, 33.56%)</title><rect x="130.8" y="533" width="395.9" height="15.0" fill="rgb(211,220,44)" rx="2" ry="2" />
<text  x="133.77" y="543.5" >http_conn::process</text>
</g>
<g >
<title>http_conn::process_write (1 samples, 0.17%)</title><rect x="524.8" y="517" width="1.9" height="15.0" fill="rgb(232,57,52)" rx="2" ry="2" />
<text  x="527.77" y="527.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::unique_lock (1 samples, 0.17%)</title><rect x="1164.3" y="565" width="1.9" height="15.0" fill="rgb(221,96,49)" rx="2" ry="2" />
<text  x="1167.26" y="575.5" ></text>
</g>
<g >
<title>do_futex (243 samples, 40.77%)</title><rect x="683.2" y="533" width="481.1" height="15.0" fill="rgb(240,176,9)" rx="2" ry="2" />
<text  x="686.15" y="543.5" >do_futex</text>
</g>
<g >
<title>ip_local_deliver (67 samples, 11.24%)</title><rect x="546.5" y="133" width="132.7" height="15.0" fill="rgb(219,101,51)" rx="2" ry="2" />
<text  x="549.54" y="143.5" >ip_local_deliver</text>
</g>
<g >
<title>Sync_IO_EventLoop (316 samples, 53.02%)</title><rect x="540.6" y="597" width="625.6" height="15.0" fill="rgb(246,11,40)" rx="2" ry="2" />
<text  x="543.60" y="607.5" >Sync_IO_EventLoop</text>
</g>
<g >
<title>vfprintf (1 samples, 0.17%)</title><rect x="532.7" y="597" width="2.0" height="15.0" fill="rgb(236,86,14)" rx="2" ry="2" />
<text  x="535.68" y="607.5" ></text>
</g>
<g >
<title>sock_recvmsg (1 samples, 0.17%)</title><rect x="538.6" y="565" width="2.0" height="15.0" fill="rgb(235,209,53)" rx="2" ry="2" />
<text  x="541.62" y="575.5" ></text>
</g>
<g >
<title>path_lookupat (3 samples, 0.50%)</title><rect x="516.8" y="373" width="6.0" height="15.0" fill="rgb(209,66,37)" rx="2" ry="2" />
<text  x="519.85" y="383.5" ></text>
</g>
<g >
<title>schedule (55 samples, 9.23%)</title><rect x="21.9" y="453" width="108.9" height="15.0" fill="rgb(223,51,8)" rx="2" ry="2" />
<text  x="24.88" y="463.5" >schedule</text>
</g>
<g >
<title>__libc_writev (71 samples, 11.91%)</title><rect x="540.6" y="581" width="140.6" height="15.0" fill="rgb(207,136,28)" rx="2" ry="2" />
<text  x="543.60" y="591.5" >__libc_writev</text>
</g>
<g >
<title>security_inode_permission (2 samples, 0.34%)</title><rect x="518.8" y="309" width="4.0" height="15.0" fill="rgb(221,155,25)" rx="2" ry="2" />
<text  x="521.83" y="319.5" ></text>
</g>
<g >
<title>system_call_fastpath (2 samples, 0.34%)</title><rect x="526.7" y="485" width="4.0" height="15.0" fill="rgb(245,69,29)" rx="2" ry="2" />
<text  x="529.74" y="495.5" ></text>
</g>
<g >
<title>__do_softirq (1 samples, 0.17%)</title><rect x="1162.3" y="389" width="2.0" height="15.0" fill="rgb(224,56,9)" rx="2" ry="2" />
<text  x="1165.28" y="399.5" ></text>
</g>
<g >
<title>vfs_fstatat (4 samples, 0.67%)</title><rect x="516.8" y="437" width="8.0" height="15.0" fill="rgb(246,77,45)" rx="2" ry="2" />
<text  x="519.85" y="447.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2 samples, 0.34%)</title><rect x="526.7" y="389" width="4.0" height="15.0" fill="rgb(241,43,19)" rx="2" ry="2" />
<text  x="529.74" y="399.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (1 samples, 0.17%)</title><rect x="19.9" y="517" width="2.0" height="15.0" fill="rgb(218,148,31)" rx="2" ry="2" />
<text  x="22.90" y="527.5" ></text>
</g>
<g >
<title>std::_Bind_simple&lt;void*  (263 samples, 44.13%)</title><rect x="10.0" y="581" width="520.7" height="15.0" fill="rgb(233,78,48)" rx="2" ry="2" />
<text  x="13.00" y="591.5" >std::_Bind_simple&lt;void* </text>
</g>
<g >
<title>schedule (9 samples, 1.51%)</title><rect x="1172.2" y="501" width="17.8" height="15.0" fill="rgb(216,153,14)" rx="2" ry="2" />
<text  x="1175.18" y="511.5" ></text>
</g>
<g >
<title>sysret_audit (1 samples, 0.17%)</title><rect x="1168.2" y="581" width="2.0" height="15.0" fill="rgb(210,74,26)" rx="2" ry="2" />
<text  x="1171.22" y="591.5" ></text>
</g>
<g >
<title>_IO_vsnprintf (1 samples, 0.17%)</title><rect x="532.7" y="613" width="2.0" height="15.0" fill="rgb(242,109,47)" rx="2" ry="2" />
<text  x="535.68" y="623.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (9 samples, 1.51%)</title><rect x="1172.2" y="517" width="17.8" height="15.0" fill="rgb(240,28,9)" rx="2" ry="2" />
<text  x="1175.18" y="527.5" ></text>
</g>
<g >
<title>__xstat64 (4 samples, 0.67%)</title><rect x="516.8" y="501" width="8.0" height="15.0" fill="rgb(236,18,36)" rx="2" ry="2" />
<text  x="519.85" y="511.5" ></text>
</g>
<g >
<title>wake_up_q (243 samples, 40.77%)</title><rect x="683.2" y="501" width="481.1" height="15.0" fill="rgb(249,114,9)" rx="2" ry="2" />
<text  x="686.15" y="511.5" >wake_up_q</text>
</g>
<g >
<title>tcp_write_xmit (70 samples, 11.74%)</title><rect x="540.6" y="405" width="138.6" height="15.0" fill="rgb(210,20,21)" rx="2" ry="2" />
<text  x="543.60" y="415.5" >tcp_write_xmit</text>
</g>
<g >
<title>do_futex (2 samples, 0.34%)</title><rect x="526.7" y="453" width="4.0" height="15.0" fill="rgb(250,27,48)" rx="2" ry="2" />
<text  x="529.74" y="463.5" ></text>
</g>
<g >
<title>__schedule (9 samples, 1.51%)</title><rect x="1172.2" y="485" width="17.8" height="15.0" fill="rgb(206,159,4)" rx="2" ry="2" />
<text  x="1175.18" y="495.5" ></text>
</g>
<g >
<title>system_call_fastpath (3 samples, 0.50%)</title><rect x="10.0" y="533" width="5.9" height="15.0" fill="rgb(243,133,9)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>ip_queue_xmit (70 samples, 11.74%)</title><rect x="540.6" y="373" width="138.6" height="15.0" fill="rgb(250,74,13)" rx="2" ry="2" />
<text  x="543.60" y="383.5" >ip_queue_xmit</text>
</g>
<g >
<title>[unknown] (3 samples, 0.50%)</title><rect x="530.7" y="629" width="5.9" height="15.0" fill="rgb(223,86,10)" rx="2" ry="2" />
<text  x="533.70" y="639.5" ></text>
</g>
<g >
<title>futex_wake (3 samples, 0.50%)</title><rect x="10.0" y="485" width="5.9" height="15.0" fill="rgb(218,171,36)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (67 samples, 11.24%)</title><rect x="546.5" y="117" width="132.7" height="15.0" fill="rgb(206,155,32)" rx="2" ry="2" />
<text  x="549.54" y="127.5" >ip_local_deliver..</text>
</g>
<g >
<title>__netif_receive_skb (67 samples, 11.24%)</title><rect x="546.5" y="197" width="132.7" height="15.0" fill="rgb(247,107,20)" rx="2" ry="2" />
<text  x="549.54" y="207.5" >__netif_receive_..</text>
</g>
<g >
<title>sock_aio_write (70 samples, 11.74%)</title><rect x="540.6" y="485" width="138.6" height="15.0" fill="rgb(227,196,47)" rx="2" ry="2" />
<text  x="543.60" y="495.5" >sock_aio_write</text>
</g>
<g >
<title>finish_task_switch (9 samples, 1.51%)</title><rect x="1172.2" y="469" width="17.8" height="15.0" fill="rgb(241,154,4)" rx="2" ry="2" />
<text  x="1175.18" y="479.5" ></text>
</g>
<g >
<title>sys_epoll_wait (10 samples, 1.68%)</title><rect x="1170.2" y="565" width="19.8" height="15.0" fill="rgb(249,166,45)" rx="2" ry="2" />
<text  x="1173.20" y="575.5" ></text>
</g>
<g >
<title>std::_Bind_simple&lt;void*  (263 samples, 44.13%)</title><rect x="10.0" y="597" width="520.7" height="15.0" fill="rgb(223,8,21)" rx="2" ry="2" />
<text  x="13.00" y="607.5" >std::_Bind_simple&lt;void* </text>
</g>
<g >
<title>__local_bh_enable_ip (68 samples, 11.41%)</title><rect x="544.6" y="293" width="134.6" height="15.0" fill="rgb(244,115,20)" rx="2" ry="2" />
<text  x="547.56" y="303.5" >__local_bh_enable..</text>
</g>
<g >
<title>tcp_push (70 samples, 11.74%)</title><rect x="540.6" y="437" width="138.6" height="15.0" fill="rgb(234,160,33)" rx="2" ry="2" />
<text  x="543.60" y="447.5" >tcp_push</text>
</g>
<g >
<title>schedule_hrtimeout_range (9 samples, 1.51%)</title><rect x="1172.2" y="533" width="17.8" height="15.0" fill="rgb(239,52,32)" rx="2" ry="2" />
<text  x="1175.18" y="543.5" ></text>
</g>
<g >
<title>tcp_sendmsg (70 samples, 11.74%)</title><rect x="540.6" y="453" width="138.6" height="15.0" fill="rgb(245,97,20)" rx="2" ry="2" />
<text  x="543.60" y="463.5" >tcp_sendmsg</text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (66 samples, 11.07%)</title><rect x="548.5" y="37" width="130.7" height="15.0" fill="rgb(251,193,26)" rx="2" ry="2" />
<text  x="551.52" y="47.5" >_raw_spin_unlock..</text>
</g>
<g >
<title>finish_task_switch (55 samples, 9.23%)</title><rect x="21.9" y="421" width="108.9" height="15.0" fill="rgb(219,8,50)" rx="2" ry="2" />
<text  x="24.88" y="431.5" >finish_task_s..</text>
</g>
<g >
<title>__strncasecmp_l_avx (1 samples, 0.17%)</title><rect x="514.9" y="501" width="1.9" height="15.0" fill="rgb(233,94,11)" rx="2" ry="2" />
<text  x="517.87" y="511.5" ></text>
</g>
<g >
<title>_raw_qspin_lock (1 samples, 0.17%)</title><rect x="546.5" y="101" width="2.0" height="15.0" fill="rgb(248,25,12)" rx="2" ry="2" />
<text  x="549.54" y="111.5" ></text>
</g>
<g >
<title>try_to_wake_up (243 samples, 40.77%)</title><rect x="683.2" y="485" width="481.1" height="15.0" fill="rgb(233,53,50)" rx="2" ry="2" />
<text  x="686.15" y="495.5" >try_to_wake_up</text>
</g>
<g >
<title>all (596 samples, 100%)</title><rect x="10.0" y="661" width="1180.0" height="15.0" fill="rgb(249,108,46)" rx="2" ry="2" />
<text  x="13.00" y="671.5" ></text>
</g>
<g >
<title>pthread_cond_broadcast@@GLIBC_2.3.2 (244 samples, 40.94%)</title><rect x="681.2" y="581" width="483.1" height="15.0" fill="rgb(237,225,54)" rx="2" ry="2" />
<text  x="684.17" y="591.5" >pthread_cond_broadcast@@GLIBC_2.3.2</text>
</g>
<g >
<title>nf_iterate (2 samples, 0.34%)</title><rect x="540.6" y="309" width="4.0" height="15.0" fill="rgb(222,70,11)" rx="2" ry="2" />
<text  x="543.60" y="319.5" ></text>
</g>
<g >
<title>wake_up_q (2 samples, 0.34%)</title><rect x="526.7" y="421" width="4.0" height="15.0" fill="rgb(240,165,4)" rx="2" ry="2" />
<text  x="529.74" y="431.5" ></text>
</g>
<g >
<title>std::thread::_Impl&lt;std::_Bind_simple&lt;void*  (263 samples, 44.13%)</title><rect x="10.0" y="613" width="520.7" height="15.0" fill="rgb(228,20,52)" rx="2" ry="2" />
<text  x="13.00" y="623.5" >std::thread::_Impl&lt;std::_Bind_simple&lt;void* </text>
</g>
<g >
<title>do_readv_writev (71 samples, 11.91%)</title><rect x="540.6" y="517" width="140.6" height="15.0" fill="rgb(218,198,20)" rx="2" ry="2" />
<text  x="543.60" y="527.5" >do_readv_writev</text>
</g>
<g >
<title>httpresponse::add_headers (1 samples, 0.17%)</title><rect x="524.8" y="501" width="1.9" height="15.0" fill="rgb(242,43,51)" rx="2" ry="2" />
<text  x="527.77" y="511.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.17%)</title><rect x="538.6" y="517" width="2.0" height="15.0" fill="rgb(214,152,0)" rx="2" ry="2" />
<text  x="541.62" y="527.5" ></text>
</g>
<g >
<title>ip_local_out_sk (70 samples, 11.74%)</title><rect x="540.6" y="357" width="138.6" height="15.0" fill="rgb(231,163,53)" rx="2" ry="2" />
<text  x="543.60" y="367.5" >ip_local_out_sk</text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.17%)</title><rect x="1162.3" y="453" width="2.0" height="15.0" fill="rgb(205,205,21)" rx="2" ry="2" />
<text  x="1165.28" y="463.5" ></text>
</g>
<g >
<title>mark_wake_futex (1 samples, 0.17%)</title><rect x="10.0" y="469" width="2.0" height="15.0" fill="rgb(251,117,45)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>threadpool&lt;http_conn&gt;::run (202 samples, 33.89%)</title><rect x="130.8" y="549" width="399.9" height="15.0" fill="rgb(220,200,9)" rx="2" ry="2" />
<text  x="133.77" y="559.5" >threadpool&lt;http_conn&gt;::run</text>
</g>
<g >
<title>std::mutex::unlock (2 samples, 0.34%)</title><rect x="526.7" y="517" width="4.0" height="15.0" fill="rgb(241,13,40)" rx="2" ry="2" />
<text  x="529.74" y="527.5" ></text>
</g>
<g >
<title>tcp_transmit_skb (70 samples, 11.74%)</title><rect x="540.6" y="389" width="138.6" height="15.0" fill="rgb(251,20,5)" rx="2" ry="2" />
<text  x="543.60" y="399.5" >tcp_transmit_skb</text>
</g>
<g >
<title>system_call_fastpath (1 samples, 0.17%)</title><rect x="538.6" y="613" width="2.0" height="15.0" fill="rgb(205,157,52)" rx="2" ry="2" />
<text  x="541.62" y="623.5" ></text>
</g>
<g >
<title>_IO_vsprintf (1 samples, 0.17%)</title><rect x="534.7" y="613" width="1.9" height="15.0" fill="rgb(208,162,50)" rx="2" ry="2" />
<text  x="537.66" y="623.5" ></text>
</g>
<g >
<title>__inode_security_revalidate (1 samples, 0.17%)</title><rect x="518.8" y="277" width="2.0" height="15.0" fill="rgb(209,84,27)" rx="2" ry="2" />
<text  x="521.83" y="287.5" ></text>
</g>
<g >
<title>system_call_fastpath (71 samples, 11.91%)</title><rect x="540.6" y="565" width="140.6" height="15.0" fill="rgb(214,139,19)" rx="2" ry="2" />
<text  x="543.60" y="575.5" >system_call_fastp..</text>
</g>
<g >
<title>threadpool&lt;http_conn&gt;::append (1 samples, 0.17%)</title><rect x="1164.3" y="581" width="1.9" height="15.0" fill="rgb(251,141,26)" rx="2" ry="2" />
<text  x="1167.26" y="591.5" ></text>
</g>
<g >
<title>do_futex (55 samples, 9.23%)</title><rect x="21.9" y="501" width="108.9" height="15.0" fill="rgb(219,3,7)" rx="2" ry="2" />
<text  x="24.88" y="511.5" >do_futex</text>
</g>
<g >
<title>httpresponse::add_content_length (1 samples, 0.17%)</title><rect x="524.8" y="485" width="1.9" height="15.0" fill="rgb(219,181,29)" rx="2" ry="2" />
<text  x="527.77" y="495.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2 samples, 0.34%)</title><rect x="12.0" y="437" width="3.9" height="15.0" fill="rgb(221,148,47)" rx="2" ry="2" />
<text  x="14.98" y="447.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.17%)</title><rect x="1170.2" y="533" width="2.0" height="15.0" fill="rgb(213,186,15)" rx="2" ry="2" />
<text  x="1173.20" y="543.5" ></text>
</g>
<g >
<title>system_call_fastpath (194 samples, 32.55%)</title><rect x="130.8" y="501" width="384.1" height="15.0" fill="rgb(253,106,14)" rx="2" ry="2" />
<text  x="133.77" y="511.5" >system_call_fastpath</text>
</g>
<g >
<title>futex_wait (55 samples, 9.23%)</title><rect x="21.9" y="485" width="108.9" height="15.0" fill="rgb(251,155,51)" rx="2" ry="2" />
<text  x="24.88" y="495.5" >futex_wait</text>
</g>
<g >
<title>irq_exit (1 samples, 0.17%)</title><rect x="1162.3" y="437" width="2.0" height="15.0" fill="rgb(225,218,4)" rx="2" ry="2" />
<text  x="1165.28" y="447.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (70 samples, 11.74%)</title><rect x="540.6" y="421" width="138.6" height="15.0" fill="rgb(219,122,50)" rx="2" ry="2" />
<text  x="543.60" y="431.5" >__tcp_push_pendin..</text>
</g>
<g >
<title>epoll_ctl (194 samples, 32.55%)</title><rect x="130.8" y="517" width="384.1" height="15.0" fill="rgb(242,157,16)" rx="2" ry="2" />
<text  x="133.77" y="527.5" >epoll_ctl</text>
</g>
<g >
<title>sysret_audit (1 samples, 0.17%)</title><rect x="19.9" y="533" width="2.0" height="15.0" fill="rgb(208,209,6)" rx="2" ry="2" />
<text  x="22.90" y="543.5" ></text>
</g>
<g >
<title>vfprintf (1 samples, 0.17%)</title><rect x="534.7" y="597" width="1.9" height="15.0" fill="rgb(246,42,14)" rx="2" ry="2" />
<text  x="537.66" y="607.5" ></text>
</g>
<g >
<title>selinux_file_permission (1 samples, 0.17%)</title><rect x="679.2" y="469" width="2.0" height="15.0" fill="rgb(239,46,24)" rx="2" ry="2" />
<text  x="682.19" y="479.5" ></text>
</g>
<g >
<title>std::mutex::lock (1 samples, 0.17%)</title><rect x="1164.3" y="533" width="1.9" height="15.0" fill="rgb(228,215,26)" rx="2" ry="2" />
<text  x="1167.26" y="543.5" ></text>
</g>
<g >
<title>futex_requeue (243 samples, 40.77%)</title><rect x="683.2" y="517" width="481.1" height="15.0" fill="rgb(237,144,52)" rx="2" ry="2" />
<text  x="686.15" y="527.5" >futex_requeue</text>
</g>
<g >
<title>__do_softirq (68 samples, 11.41%)</title><rect x="544.6" y="245" width="134.6" height="15.0" fill="rgb(205,153,54)" rx="2" ry="2" />
<text  x="547.56" y="255.5" >__do_softirq</text>
</g>
<g >
<title>__ip_local_out_sk (2 samples, 0.34%)</title><rect x="540.6" y="341" width="4.0" height="15.0" fill="rgb(209,94,39)" rx="2" ry="2" />
<text  x="543.60" y="351.5" ></text>
</g>
<g >
<title>do_softirq (1 samples, 0.17%)</title><rect x="1162.3" y="421" width="2.0" height="15.0" fill="rgb(212,196,46)" rx="2" ry="2" />
<text  x="1165.28" y="431.5" ></text>
</g>
<g >
<title>rw_verify_area (1 samples, 0.17%)</title><rect x="679.2" y="501" width="2.0" height="15.0" fill="rgb(224,203,14)" rx="2" ry="2" />
<text  x="682.19" y="511.5" ></text>
</g>
<g >
<title>sys_futex (3 samples, 0.50%)</title><rect x="10.0" y="517" width="5.9" height="15.0" fill="rgb(228,172,43)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>nf_conntrack_in (1 samples, 0.17%)</title><rect x="542.6" y="277" width="2.0" height="15.0" fill="rgb(226,43,15)" rx="2" ry="2" />
<text  x="545.58" y="287.5" ></text>
</g>
<g >
<title>process_backlog (67 samples, 11.24%)</title><rect x="546.5" y="213" width="132.7" height="15.0" fill="rgb(225,184,23)" rx="2" ry="2" />
<text  x="549.54" y="223.5" >process_backlog</text>
</g>
<g >
<title>__lll_unlock_wake (2 samples, 0.34%)</title><rect x="526.7" y="501" width="4.0" height="15.0" fill="rgb(246,47,48)" rx="2" ry="2" />
<text  x="529.74" y="511.5" ></text>
</g>
<g >
<title>tcp_recvmsg (1 samples, 0.17%)</title><rect x="538.6" y="533" width="2.0" height="15.0" fill="rgb(213,42,54)" rx="2" ry="2" />
<text  x="541.62" y="543.5" ></text>
</g>
<g >
<title>user_path_at_empty (4 samples, 0.67%)</title><rect x="516.8" y="405" width="8.0" height="15.0" fill="rgb(235,118,11)" rx="2" ry="2" />
<text  x="519.85" y="415.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.19] (263 samples, 44.13%)</title><rect x="10.0" y="629" width="520.7" height="15.0" fill="rgb(217,43,23)" rx="2" ry="2" />
<text  x="13.00" y="639.5" >[libstdc++.so.6.0.19]</text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::unlock (2 samples, 0.34%)</title><rect x="526.7" y="533" width="4.0" height="15.0" fill="rgb(252,67,46)" rx="2" ry="2" />
<text  x="529.74" y="543.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (55 samples, 9.23%)</title><rect x="21.9" y="469" width="108.9" height="15.0" fill="rgb(234,70,39)" rx="2" ry="2" />
<text  x="24.88" y="479.5" >futex_wait_qu..</text>
</g>
<g >
<title>__unqueue_futex (1 samples, 0.17%)</title><rect x="10.0" y="453" width="2.0" height="15.0" fill="rgb(233,21,29)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>httpserver (596 samples, 100.00%)</title><rect x="10.0" y="645" width="1180.0" height="15.0" fill="rgb(229,82,14)" rx="2" ry="2" />
<text  x="13.00" y="655.5" >httpserver</text>
</g>
<g >
<title>sys_newstat (4 samples, 0.67%)</title><rect x="516.8" y="469" width="8.0" height="15.0" fill="rgb(236,1,25)" rx="2" ry="2" />
<text  x="519.85" y="479.5" ></text>
</g>
<g >
<title>main (328 samples, 55.03%)</title><rect x="540.6" y="613" width="649.4" height="15.0" fill="rgb(222,65,31)" rx="2" ry="2" />
<text  x="543.60" y="623.5" >main</text>
</g>
<g >
<title>do_sync_readv_writev (70 samples, 11.74%)</title><rect x="540.6" y="501" width="138.6" height="15.0" fill="rgb(227,158,29)" rx="2" ry="2" />
<text  x="543.60" y="511.5" >do_sync_readv_wri..</text>
</g>
<g >
<title>inode_permission (3 samples, 0.50%)</title><rect x="516.8" y="341" width="6.0" height="15.0" fill="rgb(229,56,48)" rx="2" ry="2" />
<text  x="519.85" y="351.5" ></text>
</g>
</g>
</svg>
