<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="646" onload="init(evt)" viewBox="0 0 1200 646" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="646.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="629" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="629" > </text>
<g id="frames">
<g >
<title>mark_wake_futex (1 samples, 0.15%)</title><rect x="74.7" y="405" width="1.7" height="15.0" fill="rgb(239,150,26)" rx="2" ry="2" />
<text  x="77.68" y="415.5" ></text>
</g>
<g >
<title>http_conn::process (11 samples, 1.63%)</title><rect x="163.8" y="469" width="19.3" height="15.0" fill="rgb(216,98,45)" rx="2" ry="2" />
<text  x="166.84" y="479.5" ></text>
</g>
<g >
<title>std::_Bind_simple&lt;void*  (78 samples, 11.56%)</title><rect x="74.7" y="533" width="136.3" height="15.0" fill="rgb(241,29,9)" rx="2" ry="2" />
<text  x="77.68" y="543.5" >std::_Bind_simple..</text>
</g>
<g >
<title>futex_wait_queue_me (42 samples, 6.22%)</title><rect x="88.7" y="405" width="73.4" height="15.0" fill="rgb(241,1,31)" rx="2" ry="2" />
<text  x="91.67" y="415.5" >futex_wa..</text>
</g>
<g >
<title>tcp_in_window (1 samples, 0.15%)</title><rect x="31.0" y="245" width="1.7" height="15.0" fill="rgb(234,114,17)" rx="2" ry="2" />
<text  x="33.98" y="255.5" ></text>
</g>
<g >
<title>call_softirq (1 samples, 0.15%)</title><rect x="88.7" y="293" width="1.7" height="15.0" fill="rgb(234,208,14)" rx="2" ry="2" />
<text  x="91.67" y="303.5" ></text>
</g>
<g >
<title>tcp_sendmsg (32 samples, 4.74%)</title><rect x="17.0" y="453" width="55.9" height="15.0" fill="rgb(240,205,21)" rx="2" ry="2" />
<text  x="19.99" y="463.5" >tcp_s..</text>
</g>
<g >
<title>__getnstimeofday64 (1 samples, 0.15%)</title><rect x="34.5" y="181" width="1.7" height="15.0" fill="rgb(238,80,27)" rx="2" ry="2" />
<text  x="37.47" y="191.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (4 samples, 0.59%)</title><rect x="609.6" y="469" width="7.0" height="15.0" fill="rgb(210,109,0)" rx="2" ry="2" />
<text  x="612.61" y="479.5" ></text>
</g>
<g >
<title>group_send_sig_info (214 samples, 31.70%)</title><rect x="223.3" y="469" width="374.1" height="15.0" fill="rgb(212,14,47)" rx="2" ry="2" />
<text  x="226.27" y="479.5" >group_send_sig_info</text>
</g>
<g >
<title>__errno_location (1 samples, 0.15%)</title><rect x="618.4" y="533" width="1.7" height="15.0" fill="rgb(217,46,49)" rx="2" ry="2" />
<text  x="621.36" y="543.5" ></text>
</g>
<g >
<title>sys_futex (16 samples, 2.37%)</title><rect x="183.1" y="405" width="27.9" height="15.0" fill="rgb(218,10,34)" rx="2" ry="2" />
<text  x="186.07" y="415.5" >s..</text>
</g>
<g >
<title>__local_bh_enable_ip (21 samples, 3.11%)</title><rect x="36.2" y="293" width="36.7" height="15.0" fill="rgb(206,59,13)" rx="2" ry="2" />
<text  x="39.22" y="303.5" >__l..</text>
</g>
<g >
<title>sig_handler_aioread (138 samples, 20.44%)</title><rect x="621.9" y="517" width="241.2" height="15.0" fill="rgb(249,61,23)" rx="2" ry="2" />
<text  x="624.85" y="527.5" >sig_handler_aioread</text>
</g>
<g >
<title>user_path_at (6 samples, 0.89%)</title><rect x="169.1" y="357" width="10.5" height="15.0" fill="rgb(244,174,46)" rx="2" ry="2" />
<text  x="172.08" y="367.5" ></text>
</g>
<g >
<title>selinux_file_permission (1 samples, 0.15%)</title><rect x="72.9" y="469" width="1.8" height="15.0" fill="rgb(249,18,40)" rx="2" ry="2" />
<text  x="75.93" y="479.5" ></text>
</g>
<g >
<title>inet_sendmsg (33 samples, 4.89%)</title><rect x="15.2" y="469" width="57.7" height="15.0" fill="rgb(247,171,51)" rx="2" ry="2" />
<text  x="18.24" y="479.5" >inet_s..</text>
</g>
<g >
<title>getnstimeofday64 (1 samples, 0.15%)</title><rect x="34.5" y="197" width="1.7" height="15.0" fill="rgb(236,50,19)" rx="2" ry="2" />
<text  x="37.47" y="207.5" ></text>
</g>
<g >
<title>sys_futex (137 samples, 20.30%)</title><rect x="621.9" y="469" width="239.4" height="15.0" fill="rgb(219,163,46)" rx="2" ry="2" />
<text  x="624.85" y="479.5" >sys_futex</text>
</g>
<g >
<title>int_signal (1 samples, 0.15%)</title><rect x="864.8" y="517" width="1.8" height="15.0" fill="rgb(209,85,24)" rx="2" ry="2" />
<text  x="867.84" y="527.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (212 samples, 31.41%)</title><rect x="226.8" y="437" width="370.6" height="15.0" fill="rgb(211,1,53)" rx="2" ry="2" />
<text  x="229.77" y="447.5" >_raw_spin_unlock_irqrestore</text>
</g>
<g >
<title>do_signal (2 samples, 0.30%)</title><rect x="604.4" y="485" width="3.5" height="15.0" fill="rgb(245,171,51)" rx="2" ry="2" />
<text  x="607.37" y="495.5" ></text>
</g>
<g >
<title>futex_wait (9 samples, 1.33%)</title><rect x="1174.3" y="501" width="15.7" height="15.0" fill="rgb(236,164,29)" rx="2" ry="2" />
<text  x="1177.27" y="511.5" ></text>
</g>
<g >
<title>vfs_write (35 samples, 5.19%)</title><rect x="13.5" y="517" width="61.2" height="15.0" fill="rgb(246,191,32)" rx="2" ry="2" />
<text  x="16.50" y="527.5" >vfs_wr..</text>
</g>
<g >
<title>security_task_kill (2 samples, 0.30%)</title><rect x="223.3" y="437" width="3.5" height="15.0" fill="rgb(221,215,7)" rx="2" ry="2" />
<text  x="226.27" y="447.5" ></text>
</g>
<g >
<title>schedule (42 samples, 6.22%)</title><rect x="88.7" y="389" width="73.4" height="15.0" fill="rgb(219,62,46)" rx="2" ry="2" />
<text  x="91.67" y="399.5" >schedule</text>
</g>
<g >
<title>try_to_wake_up (16 samples, 2.37%)</title><rect x="183.1" y="341" width="27.9" height="15.0" fill="rgb(224,83,37)" rx="2" ry="2" />
<text  x="186.07" y="351.5" >t..</text>
</g>
<g >
<title>tcp_v4_rcv (18 samples, 2.67%)</title><rect x="38.0" y="101" width="31.4" height="15.0" fill="rgb(238,44,49)" rx="2" ry="2" />
<text  x="40.97" y="111.5" >tc..</text>
</g>
<g >
<title>mod_timer (1 samples, 0.15%)</title><rect x="20.5" y="341" width="1.7" height="15.0" fill="rgb(205,225,10)" rx="2" ry="2" />
<text  x="23.49" y="351.5" ></text>
</g>
<g >
<title>threadpool&lt;http_conn&gt;::append (1 samples, 0.15%)</title><rect x="861.3" y="501" width="1.8" height="15.0" fill="rgb(214,189,45)" rx="2" ry="2" />
<text  x="864.35" y="511.5" ></text>
</g>
<g >
<title>ip_output (23 samples, 3.41%)</title><rect x="32.7" y="341" width="40.2" height="15.0" fill="rgb(241,203,34)" rx="2" ry="2" />
<text  x="35.73" y="351.5" >ip_..</text>
</g>
<g >
<title>system_call_fastpath (3 samples, 0.44%)</title><rect x="599.1" y="549" width="5.3" height="15.0" fill="rgb(230,10,52)" rx="2" ry="2" />
<text  x="602.13" y="559.5" ></text>
</g>
<g >
<title>system_call_fastpath (8 samples, 1.19%)</title><rect x="74.7" y="469" width="14.0" height="15.0" fill="rgb(208,118,5)" rx="2" ry="2" />
<text  x="77.68" y="479.5" ></text>
</g>
<g >
<title>sys_futex (11 samples, 1.63%)</title><rect x="1170.8" y="533" width="19.2" height="15.0" fill="rgb(245,42,31)" rx="2" ry="2" />
<text  x="1173.77" y="543.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (9 samples, 1.33%)</title><rect x="1174.3" y="485" width="15.7" height="15.0" fill="rgb(227,98,26)" rx="2" ry="2" />
<text  x="1177.27" y="495.5" ></text>
</g>
<g >
<title>do_futex (42 samples, 6.22%)</title><rect x="88.7" y="437" width="73.4" height="15.0" fill="rgb(242,170,35)" rx="2" ry="2" />
<text  x="91.67" y="447.5" >do_futex</text>
</g>
<g >
<title>__lll_unlock_wake (1 samples, 0.15%)</title><rect x="861.3" y="437" width="1.8" height="15.0" fill="rgb(239,70,48)" rx="2" ry="2" />
<text  x="864.35" y="447.5" ></text>
</g>
<g >
<title>[libpthread-2.17.so] (37 samples, 5.48%)</title><rect x="10.0" y="565" width="64.7" height="15.0" fill="rgb(232,69,7)" rx="2" ry="2" />
<text  x="13.00" y="575.5" >[libpth..</text>
</g>
<g >
<title>wake_up_q (137 samples, 20.30%)</title><rect x="621.9" y="421" width="239.4" height="15.0" fill="rgb(230,118,24)" rx="2" ry="2" />
<text  x="624.85" y="431.5" >wake_up_q</text>
</g>
<g >
<title>nf_iterate (2 samples, 0.30%)</title><rect x="69.4" y="101" width="3.5" height="15.0" fill="rgb(244,2,19)" rx="2" ry="2" />
<text  x="72.44" y="111.5" ></text>
</g>
<g >
<title>_IO_no_init (1 samples, 0.15%)</title><rect x="211.0" y="549" width="1.8" height="15.0" fill="rgb(242,87,42)" rx="2" ry="2" />
<text  x="214.04" y="559.5" ></text>
</g>
<g >
<title>wake_up_q (7 samples, 1.04%)</title><rect x="76.4" y="405" width="12.3" height="15.0" fill="rgb(244,168,25)" rx="2" ry="2" />
<text  x="79.43" y="415.5" ></text>
</g>
<g >
<title>ipv4_conntrack_local (2 samples, 0.30%)</title><rect x="29.2" y="293" width="3.5" height="15.0" fill="rgb(230,86,34)" rx="2" ry="2" />
<text  x="32.23" y="303.5" ></text>
</g>
<g >
<title>threadpool&lt;http_conn&gt;::worker (78 samples, 11.56%)</title><rect x="74.7" y="501" width="136.3" height="15.0" fill="rgb(254,146,49)" rx="2" ry="2" />
<text  x="77.68" y="511.5" >threadpool&lt;http_c..</text>
</g>
<g >
<title>nf_iterate (5 samples, 0.74%)</title><rect x="24.0" y="309" width="8.7" height="15.0" fill="rgb(234,85,43)" rx="2" ry="2" />
<text  x="26.99" y="319.5" ></text>
</g>
<g >
<title>file_has_perm (1 samples, 0.15%)</title><rect x="72.9" y="453" width="1.8" height="15.0" fill="rgb(248,134,0)" rx="2" ry="2" />
<text  x="75.93" y="463.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (7 samples, 1.04%)</title><rect x="76.4" y="373" width="12.3" height="15.0" fill="rgb(232,146,52)" rx="2" ry="2" />
<text  x="79.43" y="383.5" ></text>
</g>
<g >
<title>sys_futex (169 samples, 25.04%)</title><rect x="871.8" y="533" width="295.5" height="15.0" fill="rgb(235,213,44)" rx="2" ry="2" />
<text  x="874.84" y="543.5" >sys_futex</text>
</g>
<g >
<title>fput (1 samples, 0.15%)</title><rect x="616.6" y="485" width="1.8" height="15.0" fill="rgb(209,165,29)" rx="2" ry="2" />
<text  x="619.61" y="495.5" ></text>
</g>
<g >
<title>do_rt_sigqueueinfo (214 samples, 31.70%)</title><rect x="223.3" y="501" width="374.1" height="15.0" fill="rgb(216,2,7)" rx="2" ry="2" />
<text  x="226.27" y="511.5" >do_rt_sigqueueinfo</text>
</g>
<g >
<title>std::_Bind_simple&lt;void*  (78 samples, 11.56%)</title><rect x="74.7" y="517" width="136.3" height="15.0" fill="rgb(227,227,51)" rx="2" ry="2" />
<text  x="77.68" y="527.5" >std::_Bind_simple..</text>
</g>
<g >
<title>loopback_xmit (1 samples, 0.15%)</title><rect x="34.5" y="261" width="1.7" height="15.0" fill="rgb(251,26,27)" rx="2" ry="2" />
<text  x="37.47" y="271.5" ></text>
</g>
<g >
<title>try_to_wake_up (165 samples, 24.44%)</title><rect x="878.8" y="469" width="288.5" height="15.0" fill="rgb(228,59,36)" rx="2" ry="2" />
<text  x="881.83" y="479.5" >try_to_wake_up</text>
</g>
<g >
<title>current_has_perm (1 samples, 0.15%)</title><rect x="225.0" y="405" width="1.8" height="15.0" fill="rgb(243,54,6)" rx="2" ry="2" />
<text  x="228.02" y="415.5" ></text>
</g>
<g >
<title>inet_recvmsg (1 samples, 0.15%)</title><rect x="11.7" y="453" width="1.8" height="15.0" fill="rgb(207,15,30)" rx="2" ry="2" />
<text  x="14.75" y="463.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (1 samples, 0.15%)</title><rect x="17.0" y="405" width="1.7" height="15.0" fill="rgb(250,129,8)" rx="2" ry="2" />
<text  x="19.99" y="415.5" ></text>
</g>
<g >
<title>sys_read (2 samples, 0.30%)</title><rect x="10.0" y="533" width="3.5" height="15.0" fill="rgb(210,208,4)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>__netif_receive_skb (20 samples, 2.96%)</title><rect x="38.0" y="197" width="34.9" height="15.0" fill="rgb(227,217,25)" rx="2" ry="2" />
<text  x="40.97" y="207.5" >__..</text>
</g>
<g >
<title>__audit_syscall_exit (1 samples, 0.15%)</title><rect x="219.8" y="533" width="1.7" height="15.0" fill="rgb(212,48,40)" rx="2" ry="2" />
<text  x="222.78" y="543.5" ></text>
</g>
<g >
<title>tcp_packet (1 samples, 0.15%)</title><rect x="31.0" y="261" width="1.7" height="15.0" fill="rgb(209,109,34)" rx="2" ry="2" />
<text  x="33.98" y="271.5" ></text>
</g>
<g >
<title>system_call_fastpath (42 samples, 6.22%)</title><rect x="88.7" y="469" width="73.4" height="15.0" fill="rgb(207,177,21)" rx="2" ry="2" />
<text  x="91.67" y="479.5" >system_c..</text>
</g>
<g >
<title>selinux_task_kill (2 samples, 0.30%)</title><rect x="223.3" y="421" width="3.5" height="15.0" fill="rgb(209,125,30)" rx="2" ry="2" />
<text  x="226.27" y="431.5" ></text>
</g>
<g >
<title>__check_object_size (1 samples, 0.15%)</title><rect x="1170.8" y="517" width="1.7" height="15.0" fill="rgb(229,119,24)" rx="2" ry="2" />
<text  x="1173.77" y="527.5" ></text>
</g>
<g >
<title>user_path_at_empty (6 samples, 0.89%)</title><rect x="169.1" y="341" width="10.5" height="15.0" fill="rgb(254,127,26)" rx="2" ry="2" />
<text  x="172.08" y="351.5" ></text>
</g>
<g >
<title>netif_rx (1 samples, 0.15%)</title><rect x="34.5" y="245" width="1.7" height="15.0" fill="rgb(227,216,23)" rx="2" ry="2" />
<text  x="37.47" y="255.5" ></text>
</g>
<g >
<title>__alloc_skb (1 samples, 0.15%)</title><rect x="17.0" y="421" width="1.7" height="15.0" fill="rgb(220,148,32)" rx="2" ry="2" />
<text  x="19.99" y="431.5" ></text>
</g>
<g >
<title>ip_local_out_sk (28 samples, 4.15%)</title><rect x="24.0" y="357" width="48.9" height="15.0" fill="rgb(239,78,18)" rx="2" ry="2" />
<text  x="26.99" y="367.5" >ip_l..</text>
</g>
<g >
<title>__wake_up_common_lock (18 samples, 2.67%)</title><rect x="38.0" y="53" width="31.4" height="15.0" fill="rgb(216,119,24)" rx="2" ry="2" />
<text  x="40.97" y="63.5" >__..</text>
</g>
<g >
<title>sys_futex (8 samples, 1.19%)</title><rect x="74.7" y="453" width="14.0" height="15.0" fill="rgb(225,210,23)" rx="2" ry="2" />
<text  x="77.68" y="463.5" ></text>
</g>
<g >
<title>ipt_do_table (1 samples, 0.15%)</title><rect x="71.2" y="69" width="1.7" height="15.0" fill="rgb(214,89,14)" rx="2" ry="2" />
<text  x="74.19" y="79.5" ></text>
</g>
<g >
<title>security_inode_permission (2 samples, 0.30%)</title><rect x="176.1" y="245" width="3.5" height="15.0" fill="rgb(239,101,46)" rx="2" ry="2" />
<text  x="179.07" y="255.5" ></text>
</g>
<g >
<title>std::mutex::unlock (1 samples, 0.15%)</title><rect x="861.3" y="453" width="1.8" height="15.0" fill="rgb(221,184,49)" rx="2" ry="2" />
<text  x="864.35" y="463.5" ></text>
</g>
<g >
<title>sys_getuid (1 samples, 0.15%)</title><rect x="218.0" y="533" width="1.8" height="15.0" fill="rgb(227,194,40)" rx="2" ry="2" />
<text  x="221.03" y="543.5" ></text>
</g>
<g >
<title>finish_task_switch (41 samples, 6.07%)</title><rect x="90.4" y="357" width="71.7" height="15.0" fill="rgb(227,19,39)" rx="2" ry="2" />
<text  x="93.41" y="367.5" >finish_t..</text>
</g>
<g >
<title>sys_pwrite64 (2 samples, 0.30%)</title><rect x="600.9" y="533" width="3.5" height="15.0" fill="rgb(251,7,12)" rx="2" ry="2" />
<text  x="603.87" y="543.5" ></text>
</g>
<g >
<title>http_conn::process_read (9 samples, 1.33%)</title><rect x="165.6" y="453" width="15.7" height="15.0" fill="rgb(217,126,37)" rx="2" ry="2" />
<text  x="168.59" y="463.5" ></text>
</g>
<g >
<title>do_softirq (1 samples, 0.15%)</title><rect x="88.7" y="309" width="1.7" height="15.0" fill="rgb(245,157,16)" rx="2" ry="2" />
<text  x="91.67" y="319.5" ></text>
</g>
<g >
<title>sk_reset_timer (1 samples, 0.15%)</title><rect x="20.5" y="357" width="1.7" height="15.0" fill="rgb(237,191,52)" rx="2" ry="2" />
<text  x="23.49" y="367.5" ></text>
</g>
<g >
<title>fget_light (2 samples, 0.30%)</title><rect x="600.9" y="517" width="3.5" height="15.0" fill="rgb(227,59,26)" rx="2" ry="2" />
<text  x="603.87" y="527.5" ></text>
</g>
<g >
<title>ip_queue_xmit (28 samples, 4.15%)</title><rect x="24.0" y="373" width="48.9" height="15.0" fill="rgb(250,61,23)" rx="2" ry="2" />
<text  x="26.99" y="383.5" >ip_q..</text>
</g>
<g >
<title>schedule (8 samples, 1.19%)</title><rect x="1176.0" y="469" width="14.0" height="15.0" fill="rgb(224,157,13)" rx="2" ry="2" />
<text  x="1179.01" y="479.5" ></text>
</g>
<g >
<title>__inode_permission (3 samples, 0.44%)</title><rect x="174.3" y="261" width="5.3" height="15.0" fill="rgb(240,11,53)" rx="2" ry="2" />
<text  x="177.33" y="271.5" ></text>
</g>
<g >
<title>filename_lookup (6 samples, 0.89%)</title><rect x="169.1" y="325" width="10.5" height="15.0" fill="rgb(243,211,11)" rx="2" ry="2" />
<text  x="172.08" y="335.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (18 samples, 2.67%)</title><rect x="38.0" y="37" width="31.4" height="15.0" fill="rgb(214,116,39)" rx="2" ry="2" />
<text  x="40.97" y="47.5" >_r..</text>
</g>
<g >
<title>futex_wake (8 samples, 1.19%)</title><rect x="74.7" y="421" width="14.0" height="15.0" fill="rgb(226,186,49)" rx="2" ry="2" />
<text  x="77.68" y="431.5" ></text>
</g>
<g >
<title>_IO_vsnprintf (1 samples, 0.15%)</title><rect x="181.3" y="421" width="1.8" height="15.0" fill="rgb(225,149,5)" rx="2" ry="2" />
<text  x="184.32" y="431.5" ></text>
</g>
<g >
<title>fput (1 samples, 0.15%)</title><rect x="10.0" y="517" width="1.7" height="15.0" fill="rgb(233,131,52)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>futex_requeue (137 samples, 20.30%)</title><rect x="621.9" y="437" width="239.4" height="15.0" fill="rgb(216,149,30)" rx="2" ry="2" />
<text  x="624.85" y="447.5" >futex_requeue</text>
</g>
<g >
<title>kill_pid_info (214 samples, 31.70%)</title><rect x="223.3" y="485" width="374.1" height="15.0" fill="rgb(226,104,51)" rx="2" ry="2" />
<text  x="226.27" y="495.5" >kill_pid_info</text>
</g>
<g >
<title>std::thread::_Impl&lt;std::_Bind_simple&lt;void*  (78 samples, 11.56%)</title><rect x="74.7" y="549" width="136.3" height="15.0" fill="rgb(226,228,34)" rx="2" ry="2" />
<text  x="77.68" y="559.5" >std::thread::_Imp..</text>
</g>
<g >
<title>wake_up_q (1 samples, 0.15%)</title><rect x="861.3" y="357" width="1.8" height="15.0" fill="rgb(254,105,53)" rx="2" ry="2" />
<text  x="864.35" y="367.5" ></text>
</g>
<g >
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (13 samples, 1.93%)</title><rect x="1167.3" y="565" width="22.7" height="15.0" fill="rgb(243,97,15)" rx="2" ry="2" />
<text  x="1170.27" y="575.5" >p..</text>
</g>
<g >
<title>vfs_fstatat (6 samples, 0.89%)</title><rect x="169.1" y="373" width="10.5" height="15.0" fill="rgb(211,92,32)" rx="2" ry="2" />
<text  x="172.08" y="383.5" ></text>
</g>
<g >
<title>__unqueue_futex (1 samples, 0.15%)</title><rect x="74.7" y="389" width="1.7" height="15.0" fill="rgb(235,42,22)" rx="2" ry="2" />
<text  x="77.68" y="399.5" ></text>
</g>
<g >
<title>__do_softirq (1 samples, 0.15%)</title><rect x="88.7" y="277" width="1.7" height="15.0" fill="rgb(217,182,15)" rx="2" ry="2" />
<text  x="91.67" y="287.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (16 samples, 2.37%)</title><rect x="183.1" y="325" width="27.9" height="15.0" fill="rgb(230,195,18)" rx="2" ry="2" />
<text  x="186.07" y="335.5" >_..</text>
</g>
<g >
<title>ip_finish_output (23 samples, 3.41%)</title><rect x="32.7" y="325" width="40.2" height="15.0" fill="rgb(250,137,10)" rx="2" ry="2" />
<text  x="35.73" y="335.5" >ip_..</text>
</g>
<g >
<title>__lll_unlock_wake (16 samples, 2.37%)</title><rect x="183.1" y="437" width="27.9" height="15.0" fill="rgb(217,28,27)" rx="2" ry="2" />
<text  x="186.07" y="447.5" >_..</text>
</g>
<g >
<title>iptable_mangle_hook (1 samples, 0.15%)</title><rect x="71.2" y="85" width="1.7" height="15.0" fill="rgb(220,190,21)" rx="2" ry="2" />
<text  x="74.19" y="95.5" ></text>
</g>
<g >
<title>sk_wait_data (1 samples, 0.15%)</title><rect x="11.7" y="421" width="1.8" height="15.0" fill="rgb(238,7,10)" rx="2" ry="2" />
<text  x="14.75" y="431.5" ></text>
</g>
<g >
<title>selinux_inode_permission (2 samples, 0.30%)</title><rect x="176.1" y="229" width="3.5" height="15.0" fill="rgb(219,170,30)" rx="2" ry="2" />
<text  x="179.07" y="239.5" ></text>
</g>
<g >
<title>do_futex (1 samples, 0.15%)</title><rect x="861.3" y="389" width="1.8" height="15.0" fill="rgb(239,4,14)" rx="2" ry="2" />
<text  x="864.35" y="399.5" ></text>
</g>
<g >
<title>sock_aio_read (1 samples, 0.15%)</title><rect x="11.7" y="485" width="1.8" height="15.0" fill="rgb(211,143,7)" rx="2" ry="2" />
<text  x="14.75" y="495.5" ></text>
</g>
<g >
<title>__list_del_entry (1 samples, 0.15%)</title><rect x="74.7" y="357" width="1.7" height="15.0" fill="rgb(254,26,11)" rx="2" ry="2" />
<text  x="77.68" y="367.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (165 samples, 24.44%)</title><rect x="878.8" y="453" width="288.5" height="15.0" fill="rgb(232,206,8)" rx="2" ry="2" />
<text  x="881.83" y="463.5" >_raw_spin_unlock_irqrestore</text>
</g>
<g >
<title>system_call_fastpath (7 samples, 1.04%)</title><rect x="167.3" y="421" width="12.3" height="15.0" fill="rgb(218,225,36)" rx="2" ry="2" />
<text  x="170.33" y="431.5" ></text>
</g>
<g >
<title>schedule_timeout (1 samples, 0.15%)</title><rect x="11.7" y="405" width="1.8" height="15.0" fill="rgb(227,115,15)" rx="2" ry="2" />
<text  x="14.75" y="415.5" ></text>
</g>
<g >
<title>finish_task_switch (8 samples, 1.19%)</title><rect x="1176.0" y="437" width="14.0" height="15.0" fill="rgb(220,141,1)" rx="2" ry="2" />
<text  x="1179.01" y="447.5" ></text>
</g>
<g >
<title>do_futex (8 samples, 1.19%)</title><rect x="74.7" y="437" width="14.0" height="15.0" fill="rgb(247,62,50)" rx="2" ry="2" />
<text  x="77.68" y="447.5" ></text>
</g>
<g >
<title>pthread_cond_signal@@GLIBC_2.3.2 (169 samples, 25.04%)</title><rect x="871.8" y="565" width="295.5" height="15.0" fill="rgb(206,61,25)" rx="2" ry="2" />
<text  x="874.84" y="575.5" >pthread_cond_signal@@GLIBC_2.3.2</text>
</g>
<g >
<title>__dev_queue_xmit (1 samples, 0.15%)</title><rect x="34.5" y="293" width="1.7" height="15.0" fill="rgb(253,101,40)" rx="2" ry="2" />
<text  x="37.47" y="303.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1 samples, 0.15%)</title><rect x="34.5" y="277" width="1.7" height="15.0" fill="rgb(231,165,50)" rx="2" ry="2" />
<text  x="37.47" y="287.5" ></text>
</g>
<g >
<title>__vdso_gettimeofday (1 samples, 0.15%)</title><rect x="868.3" y="565" width="1.8" height="15.0" fill="rgb(237,139,22)" rx="2" ry="2" />
<text  x="871.34" y="575.5" ></text>
</g>
<g >
<title>stub_rt_sigreturn (1 samples, 0.15%)</title><rect x="607.9" y="517" width="1.7" height="15.0" fill="rgb(225,129,35)" rx="2" ry="2" />
<text  x="610.87" y="527.5" ></text>
</g>
<g >
<title>futex_wake (1 samples, 0.15%)</title><rect x="861.3" y="373" width="1.8" height="15.0" fill="rgb(237,55,34)" rx="2" ry="2" />
<text  x="864.35" y="383.5" ></text>
</g>
<g >
<title>try_to_wake_up (137 samples, 20.30%)</title><rect x="621.9" y="405" width="239.4" height="15.0" fill="rgb(224,133,20)" rx="2" ry="2" />
<text  x="624.85" y="415.5" >try_to_wake_up</text>
</g>
<g >
<title>std::mutex::unlock (16 samples, 2.37%)</title><rect x="183.1" y="453" width="27.9" height="15.0" fill="rgb(206,110,4)" rx="2" ry="2" />
<text  x="186.07" y="463.5" >s..</text>
</g>
<g >
<title>sk_stream_alloc_skb (1 samples, 0.15%)</title><rect x="17.0" y="437" width="1.7" height="15.0" fill="rgb(247,137,34)" rx="2" ry="2" />
<text  x="19.99" y="447.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.15%)</title><rect x="1174.3" y="453" width="1.7" height="15.0" fill="rgb(220,175,26)" rx="2" ry="2" />
<text  x="1177.27" y="463.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.15%)</title><rect x="20.5" y="325" width="1.7" height="15.0" fill="rgb(215,192,22)" rx="2" ry="2" />
<text  x="23.49" y="335.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (137 samples, 20.30%)</title><rect x="621.9" y="389" width="239.4" height="15.0" fill="rgb(213,219,10)" rx="2" ry="2" />
<text  x="624.85" y="399.5" >_raw_spin_unlock_irqrestore</text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.15%)</title><rect x="861.3" y="341" width="1.8" height="15.0" fill="rgb(214,52,0)" rx="2" ry="2" />
<text  x="864.35" y="351.5" ></text>
</g>
<g >
<title>ipt_do_table (2 samples, 0.30%)</title><rect x="25.7" y="277" width="3.5" height="15.0" fill="rgb(225,0,41)" rx="2" ry="2" />
<text  x="28.73" y="287.5" ></text>
</g>
<g >
<title>sock_aio_write (33 samples, 4.89%)</title><rect x="15.2" y="485" width="57.7" height="15.0" fill="rgb(209,33,41)" rx="2" ry="2" />
<text  x="18.24" y="495.5" >sock_a..</text>
</g>
<g >
<title>__schedule (8 samples, 1.19%)</title><rect x="1176.0" y="453" width="14.0" height="15.0" fill="rgb(209,140,47)" rx="2" ry="2" />
<text  x="1179.01" y="463.5" ></text>
</g>
<g >
<title>sysret_audit (1 samples, 0.15%)</title><rect x="1169.0" y="549" width="1.8" height="15.0" fill="rgb(245,137,30)" rx="2" ry="2" />
<text  x="1172.02" y="559.5" ></text>
</g>
<g >
<title>ktime_get_real (1 samples, 0.15%)</title><rect x="34.5" y="213" width="1.7" height="15.0" fill="rgb(254,92,42)" rx="2" ry="2" />
<text  x="37.47" y="223.5" ></text>
</g>
<g >
<title>sys_write (35 samples, 5.19%)</title><rect x="13.5" y="533" width="61.2" height="15.0" fill="rgb(207,212,25)" rx="2" ry="2" />
<text  x="16.50" y="543.5" >sys_wr..</text>
</g>
<g >
<title>system_call_fastpath (16 samples, 2.37%)</title><rect x="183.1" y="421" width="27.9" height="15.0" fill="rgb(205,184,12)" rx="2" ry="2" />
<text  x="186.07" y="431.5" >s..</text>
</g>
<g >
<title>inode_has_perm.isra.35.constprop.72 (1 samples, 0.15%)</title><rect x="72.9" y="437" width="1.8" height="15.0" fill="rgb(252,134,46)" rx="2" ry="2" />
<text  x="75.93" y="447.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.15%)</title><rect x="870.1" y="565" width="1.7" height="15.0" fill="rgb(248,82,10)" rx="2" ry="2" />
<text  x="873.09" y="575.5" ></text>
</g>
<g >
<title>threadpool&lt;http_conn&gt;::run (27 samples, 4.00%)</title><rect x="163.8" y="485" width="47.2" height="15.0" fill="rgb(248,148,12)" rx="2" ry="2" />
<text  x="166.84" y="495.5" >thre..</text>
</g>
<g >
<title>inode_permission (1 samples, 0.15%)</title><rect x="170.8" y="293" width="1.8" height="15.0" fill="rgb(226,59,15)" rx="2" ry="2" />
<text  x="173.83" y="303.5" ></text>
</g>
<g >
<title>do_softirq (21 samples, 3.11%)</title><rect x="36.2" y="277" width="36.7" height="15.0" fill="rgb(232,125,21)" rx="2" ry="2" />
<text  x="39.22" y="287.5" >do_..</text>
</g>
<g >
<title>__inode_security_revalidate (1 samples, 0.15%)</title><rect x="177.8" y="213" width="1.8" height="15.0" fill="rgb(206,226,11)" rx="2" ry="2" />
<text  x="180.82" y="223.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::unlock (1 samples, 0.15%)</title><rect x="861.3" y="469" width="1.8" height="15.0" fill="rgb(216,59,17)" rx="2" ry="2" />
<text  x="864.35" y="479.5" ></text>
</g>
<g >
<title>tcp_prequeue (18 samples, 2.67%)</title><rect x="38.0" y="85" width="31.4" height="15.0" fill="rgb(225,206,36)" rx="2" ry="2" />
<text  x="40.97" y="95.5" >tc..</text>
</g>
<g >
<title>system_call_fastpath (1 samples, 0.15%)</title><rect x="218.0" y="549" width="1.8" height="15.0" fill="rgb(215,208,16)" rx="2" ry="2" />
<text  x="221.03" y="559.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.15%)</title><rect x="88.7" y="341" width="1.7" height="15.0" fill="rgb(231,137,0)" rx="2" ry="2" />
<text  x="91.67" y="351.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.59%)</title><rect x="609.6" y="437" width="7.0" height="15.0" fill="rgb(244,128,46)" rx="2" ry="2" />
<text  x="612.61" y="447.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (18 samples, 2.67%)</title><rect x="38.0" y="69" width="31.4" height="15.0" fill="rgb(249,153,45)" rx="2" ry="2" />
<text  x="40.97" y="79.5" >__..</text>
</g>
<g >
<title>try_to_wake_up (7 samples, 1.04%)</title><rect x="76.4" y="389" width="12.3" height="15.0" fill="rgb(235,90,49)" rx="2" ry="2" />
<text  x="79.43" y="399.5" ></text>
</g>
<g >
<title>local_bh_enable (21 samples, 3.11%)</title><rect x="36.2" y="309" width="36.7" height="15.0" fill="rgb(215,225,50)" rx="2" ry="2" />
<text  x="39.22" y="319.5" >loc..</text>
</g>
<g >
<title>do_notify_resume (1 samples, 0.15%)</title><rect x="864.8" y="501" width="1.8" height="15.0" fill="rgb(231,185,41)" rx="2" ry="2" />
<text  x="867.84" y="511.5" ></text>
</g>
<g >
<title>security_file_permission (1 samples, 0.15%)</title><rect x="72.9" y="485" width="1.8" height="15.0" fill="rgb(212,62,52)" rx="2" ry="2" />
<text  x="75.93" y="495.5" ></text>
</g>
<g >
<title>path_lookupat (6 samples, 0.89%)</title><rect x="169.1" y="309" width="10.5" height="15.0" fill="rgb(228,182,14)" rx="2" ry="2" />
<text  x="172.08" y="319.5" ></text>
</g>
<g >
<title>sysret_audit (1 samples, 0.15%)</title><rect x="219.8" y="549" width="1.7" height="15.0" fill="rgb(226,181,34)" rx="2" ry="2" />
<text  x="222.78" y="559.5" ></text>
</g>
<g >
<title>__libc_start_main (151 samples, 22.37%)</title><rect x="604.4" y="565" width="263.9" height="15.0" fill="rgb(227,0,54)" rx="2" ry="2" />
<text  x="607.37" y="575.5" >__libc_start_main</text>
</g>
<g >
<title>futex_wait (42 samples, 6.22%)</title><rect x="88.7" y="421" width="73.4" height="15.0" fill="rgb(208,203,0)" rx="2" ry="2" />
<text  x="91.67" y="431.5" >futex_wait</text>
</g>
<g >
<title>wake_up_q (16 samples, 2.37%)</title><rect x="183.1" y="357" width="27.9" height="15.0" fill="rgb(208,86,2)" rx="2" ry="2" />
<text  x="186.07" y="367.5" >w..</text>
</g>
<g >
<title>SYSC_rt_sigqueueinfo (214 samples, 31.70%)</title><rect x="223.3" y="517" width="374.1" height="15.0" fill="rgb(206,39,4)" rx="2" ry="2" />
<text  x="226.27" y="527.5" >SYSC_rt_sigqueueinfo</text>
</g>
<g >
<title>sys_rt_sigqueueinfo (214 samples, 31.70%)</title><rect x="223.3" y="533" width="374.1" height="15.0" fill="rgb(233,116,39)" rx="2" ry="2" />
<text  x="226.27" y="543.5" >sys_rt_sigqueueinfo</text>
</g>
<g >
<title>release_sock (1 samples, 0.15%)</title><rect x="15.2" y="453" width="1.8" height="15.0" fill="rgb(227,96,34)" rx="2" ry="2" />
<text  x="18.24" y="463.5" ></text>
</g>
<g >
<title>sys_futex (42 samples, 6.22%)</title><rect x="88.7" y="453" width="73.4" height="15.0" fill="rgb(229,89,34)" rx="2" ry="2" />
<text  x="91.67" y="463.5" >sys_futex</text>
</g>
<g >
<title>__xstat64 (7 samples, 1.04%)</title><rect x="167.3" y="437" width="12.3" height="15.0" fill="rgb(228,156,14)" rx="2" ry="2" />
<text  x="170.33" y="447.5" ></text>
</g>
<g >
<title>vfs_read (1 samples, 0.15%)</title><rect x="11.7" y="517" width="1.8" height="15.0" fill="rgb(226,15,50)" rx="2" ry="2" />
<text  x="14.75" y="527.5" ></text>
</g>
<g >
<title>sock_aio_read.part.9 (1 samples, 0.15%)</title><rect x="11.7" y="469" width="1.8" height="15.0" fill="rgb(245,67,28)" rx="2" ry="2" />
<text  x="14.75" y="479.5" ></text>
</g>
<g >
<title>vfprintf (1 samples, 0.15%)</title><rect x="212.8" y="533" width="1.7" height="15.0" fill="rgb(214,147,2)" rx="2" ry="2" />
<text  x="215.79" y="543.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.19] (78 samples, 11.56%)</title><rect x="74.7" y="565" width="136.3" height="15.0" fill="rgb(250,53,9)" rx="2" ry="2" />
<text  x="77.68" y="575.5" >[libstdc++.so.6.0..</text>
</g>
<g >
<title>tcp_transmit_skb (29 samples, 4.30%)</title><rect x="22.2" y="389" width="50.7" height="15.0" fill="rgb(222,79,28)" rx="2" ry="2" />
<text  x="25.24" y="399.5" >tcp_t..</text>
</g>
<g >
<title>aio_cancel (1 samples, 0.15%)</title><rect x="620.1" y="517" width="1.8" height="15.0" fill="rgb(251,91,50)" rx="2" ry="2" />
<text  x="623.10" y="527.5" ></text>
</g>
<g >
<title>netif_rx_internal (1 samples, 0.15%)</title><rect x="34.5" y="229" width="1.7" height="15.0" fill="rgb(237,149,2)" rx="2" ry="2" />
<text  x="37.47" y="239.5" ></text>
</g>
<g >
<title>__do_softirq (21 samples, 3.11%)</title><rect x="36.2" y="245" width="36.7" height="15.0" fill="rgb(228,40,44)" rx="2" ry="2" />
<text  x="39.22" y="255.5" >__d..</text>
</g>
<g >
<title>sysret_signal (1 samples, 0.15%)</title><rect x="221.5" y="549" width="1.8" height="15.0" fill="rgb(214,77,24)" rx="2" ry="2" />
<text  x="224.53" y="559.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.15%)</title><rect x="11.7" y="389" width="1.8" height="15.0" fill="rgb(232,202,6)" rx="2" ry="2" />
<text  x="14.75" y="399.5" ></text>
</g>
<g >
<title>do_sync_read (1 samples, 0.15%)</title><rect x="11.7" y="501" width="1.8" height="15.0" fill="rgb(216,1,16)" rx="2" ry="2" />
<text  x="14.75" y="511.5" ></text>
</g>
<g >
<title>net_rx_action (21 samples, 3.11%)</title><rect x="36.2" y="229" width="36.7" height="15.0" fill="rgb(254,118,50)" rx="2" ry="2" />
<text  x="39.22" y="239.5" >net..</text>
</g>
<g >
<title>do_notify_resume (2 samples, 0.30%)</title><rect x="604.4" y="501" width="3.5" height="15.0" fill="rgb(229,18,50)" rx="2" ry="2" />
<text  x="607.37" y="511.5" ></text>
</g>
<g >
<title>ip_local_deliver (20 samples, 2.96%)</title><rect x="38.0" y="133" width="34.9" height="15.0" fill="rgb(243,152,12)" rx="2" ry="2" />
<text  x="40.97" y="143.5" >ip..</text>
</g>
<g >
<title>int_signal (2 samples, 0.30%)</title><rect x="604.4" y="517" width="3.5" height="15.0" fill="rgb(208,37,11)" rx="2" ry="2" />
<text  x="607.37" y="527.5" ></text>
</g>
<g >
<title>main (151 samples, 22.37%)</title><rect x="604.4" y="549" width="263.9" height="15.0" fill="rgb(223,185,5)" rx="2" ry="2" />
<text  x="607.37" y="559.5" >main</text>
</g>
<g >
<title>inode_permission (3 samples, 0.44%)</title><rect x="174.3" y="277" width="5.3" height="15.0" fill="rgb(231,103,49)" rx="2" ry="2" />
<text  x="177.33" y="287.5" ></text>
</g>
<g >
<title>__schedule (42 samples, 6.22%)</title><rect x="88.7" y="373" width="73.4" height="15.0" fill="rgb(208,31,41)" rx="2" ry="2" />
<text  x="91.67" y="383.5" >__schedule</text>
</g>
<g >
<title>SYSC_newstat (6 samples, 0.89%)</title><rect x="169.1" y="389" width="10.5" height="15.0" fill="rgb(213,33,5)" rx="2" ry="2" />
<text  x="172.08" y="399.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.15%)</title><rect x="88.7" y="357" width="1.7" height="15.0" fill="rgb(254,202,39)" rx="2" ry="2" />
<text  x="91.67" y="367.5" ></text>
</g>
<g >
<title>[libc-2.17.so] (8 samples, 1.19%)</title><rect x="604.4" y="533" width="14.0" height="15.0" fill="rgb(217,134,46)" rx="2" ry="2" />
<text  x="607.37" y="543.5" ></text>
</g>
<g >
<title>_IO_vsprintf (1 samples, 0.15%)</title><rect x="214.5" y="549" width="1.8" height="15.0" fill="rgb(227,40,51)" rx="2" ry="2" />
<text  x="217.53" y="559.5" ></text>
</g>
<g >
<title>do_futex (16 samples, 2.37%)</title><rect x="183.1" y="389" width="27.9" height="15.0" fill="rgb(228,58,25)" rx="2" ry="2" />
<text  x="186.07" y="399.5" >d..</text>
</g>
<g >
<title>system_call_fastpath (169 samples, 25.04%)</title><rect x="871.8" y="549" width="295.5" height="15.0" fill="rgb(239,85,28)" rx="2" ry="2" />
<text  x="874.84" y="559.5" >system_call_fastpath</text>
</g>
<g >
<title>plist_del (1 samples, 0.15%)</title><rect x="74.7" y="373" width="1.7" height="15.0" fill="rgb(245,47,19)" rx="2" ry="2" />
<text  x="77.68" y="383.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (4 samples, 0.59%)</title><rect x="609.6" y="453" width="7.0" height="15.0" fill="rgb(233,12,17)" rx="2" ry="2" />
<text  x="612.61" y="463.5" ></text>
</g>
<g >
<title>__virt_addr_valid (1 samples, 0.15%)</title><rect x="1170.8" y="501" width="1.7" height="15.0" fill="rgb(253,113,33)" rx="2" ry="2" />
<text  x="1173.77" y="511.5" ></text>
</g>
<g >
<title>ipt_do_table (1 samples, 0.15%)</title><rect x="24.0" y="293" width="1.7" height="15.0" fill="rgb(218,221,1)" rx="2" ry="2" />
<text  x="26.99" y="303.5" ></text>
</g>
<g >
<title>generic_permission (1 samples, 0.15%)</title><rect x="174.3" y="245" width="1.8" height="15.0" fill="rgb(230,198,31)" rx="2" ry="2" />
<text  x="177.33" y="255.5" ></text>
</g>
<g >
<title>do_sigaltstack (1 samples, 0.15%)</title><rect x="607.9" y="469" width="1.7" height="15.0" fill="rgb(222,140,32)" rx="2" ry="2" />
<text  x="610.87" y="479.5" ></text>
</g>
<g >
<title>process_backlog (20 samples, 2.96%)</title><rect x="38.0" y="213" width="34.9" height="15.0" fill="rgb(233,60,46)" rx="2" ry="2" />
<text  x="40.97" y="223.5" >pr..</text>
</g>
<g >
<title>__libc_pwrite (4 samples, 0.59%)</title><rect x="597.4" y="565" width="7.0" height="15.0" fill="rgb(223,114,50)" rx="2" ry="2" />
<text  x="600.38" y="575.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.15%)</title><rect x="88.7" y="325" width="1.7" height="15.0" fill="rgb(235,187,41)" rx="2" ry="2" />
<text  x="91.67" y="335.5" ></text>
</g>
<g >
<title>pthread_cond_wait@@GLIBC_2.3.2 (42 samples, 6.22%)</title><rect x="88.7" y="485" width="73.4" height="15.0" fill="rgb(206,115,4)" rx="2" ry="2" />
<text  x="91.67" y="495.5" >pthread_..</text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::unlock (16 samples, 2.37%)</title><rect x="183.1" y="469" width="27.9" height="15.0" fill="rgb(229,93,35)" rx="2" ry="2" />
<text  x="186.07" y="479.5" >s..</text>
</g>
<g >
<title>_IO_vsnprintf (1 samples, 0.15%)</title><rect x="212.8" y="549" width="1.7" height="15.0" fill="rgb(231,152,48)" rx="2" ry="2" />
<text  x="215.79" y="559.5" ></text>
</g>
<g >
<title>restore_altstack (1 samples, 0.15%)</title><rect x="607.9" y="485" width="1.7" height="15.0" fill="rgb(240,144,49)" rx="2" ry="2" />
<text  x="610.87" y="495.5" ></text>
</g>
<g >
<title>call_softirq (21 samples, 3.11%)</title><rect x="36.2" y="261" width="36.7" height="15.0" fill="rgb(254,134,11)" rx="2" ry="2" />
<text  x="39.22" y="271.5" >cal..</text>
</g>
<g >
<title>__restore_rt (139 samples, 20.59%)</title><rect x="620.1" y="533" width="243.0" height="15.0" fill="rgb(252,109,54)" rx="2" ry="2" />
<text  x="623.10" y="543.5" >__restore_rt</text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.15%)</title><rect x="11.7" y="357" width="1.8" height="15.0" fill="rgb(216,144,27)" rx="2" ry="2" />
<text  x="14.75" y="367.5" ></text>
</g>
<g >
<title>tcp_push (30 samples, 4.44%)</title><rect x="20.5" y="437" width="52.4" height="15.0" fill="rgb(249,90,46)" rx="2" ry="2" />
<text  x="23.49" y="447.5" >tcp_p..</text>
</g>
<g >
<title>__GI___getuid (1 samples, 0.15%)</title><rect x="218.0" y="565" width="1.8" height="15.0" fill="rgb(229,57,20)" rx="2" ry="2" />
<text  x="221.03" y="575.5" ></text>
</g>
<g >
<title>sig_handler_aioread (2 samples, 0.30%)</title><rect x="863.1" y="533" width="3.5" height="15.0" fill="rgb(251,87,43)" rx="2" ry="2" />
<text  x="866.10" y="543.5" ></text>
</g>
<g >
<title>ep_poll (4 samples, 0.59%)</title><rect x="609.6" y="485" width="7.0" height="15.0" fill="rgb(214,80,53)" rx="2" ry="2" />
<text  x="612.61" y="495.5" ></text>
</g>
<g >
<title>system_call_fastpath (137 samples, 20.30%)</title><rect x="621.9" y="485" width="239.4" height="15.0" fill="rgb(239,23,7)" rx="2" ry="2" />
<text  x="624.85" y="495.5" >system_call_fastpath</text>
</g>
<g >
<title>tcp_rearm_rto (1 samples, 0.15%)</title><rect x="20.5" y="373" width="1.7" height="15.0" fill="rgb(243,109,7)" rx="2" ry="2" />
<text  x="23.49" y="383.5" ></text>
</g>
<g >
<title>futex_wake (16 samples, 2.37%)</title><rect x="183.1" y="373" width="27.9" height="15.0" fill="rgb(224,82,36)" rx="2" ry="2" />
<text  x="186.07" y="383.5" >f..</text>
</g>
<g >
<title>__aio_sigqueue (216 samples, 32.00%)</title><rect x="219.8" y="565" width="377.6" height="15.0" fill="rgb(245,105,54)" rx="2" ry="2" />
<text  x="222.78" y="575.5" >__aio_sigqueue</text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 0.15%)</title><rect x="1174.3" y="469" width="1.7" height="15.0" fill="rgb(240,94,12)" rx="2" ry="2" />
<text  x="1177.27" y="479.5" ></text>
</g>
<g >
<title>_IO_vsprintf (1 samples, 0.15%)</title><rect x="165.6" y="437" width="1.7" height="15.0" fill="rgb(242,61,6)" rx="2" ry="2" />
<text  x="168.59" y="447.5" ></text>
</g>
<g >
<title>static_key_enabled (1 samples, 0.15%)</title><rect x="18.7" y="437" width="1.8" height="15.0" fill="rgb(224,123,34)" rx="2" ry="2" />
<text  x="21.74" y="447.5" ></text>
</g>
<g >
<title>do_signal (1 samples, 0.15%)</title><rect x="866.6" y="485" width="1.7" height="15.0" fill="rgb(205,124,15)" rx="2" ry="2" />
<text  x="869.59" y="495.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (18 samples, 2.67%)</title><rect x="38.0" y="117" width="31.4" height="15.0" fill="rgb(206,29,7)" rx="2" ry="2" />
<text  x="40.97" y="127.5" >ip..</text>
</g>
<g >
<title>sys_epoll_wait (5 samples, 0.74%)</title><rect x="609.6" y="501" width="8.8" height="15.0" fill="rgb(250,37,29)" rx="2" ry="2" />
<text  x="612.61" y="511.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (1 samples, 0.15%)</title><rect x="1169.0" y="533" width="1.8" height="15.0" fill="rgb(254,138,19)" rx="2" ry="2" />
<text  x="1172.02" y="543.5" ></text>
</g>
<g >
<title>link_path_walk (4 samples, 0.59%)</title><rect x="172.6" y="293" width="7.0" height="15.0" fill="rgb(251,103,38)" rx="2" ry="2" />
<text  x="175.58" y="303.5" ></text>
</g>
<g >
<title>system_call_fastpath (214 samples, 31.70%)</title><rect x="223.3" y="549" width="374.1" height="15.0" fill="rgb(217,21,46)" rx="2" ry="2" />
<text  x="226.27" y="559.5" >system_call_fastpath</text>
</g>
<g >
<title>do_futex (169 samples, 25.04%)</title><rect x="871.8" y="517" width="295.5" height="15.0" fill="rgb(232,69,8)" rx="2" ry="2" />
<text  x="874.84" y="527.5" >do_futex</text>
</g>
<g >
<title>nf_conntrack_in (2 samples, 0.30%)</title><rect x="29.2" y="277" width="3.5" height="15.0" fill="rgb(206,6,42)" rx="2" ry="2" />
<text  x="32.23" y="287.5" ></text>
</g>
<g >
<title>system_call_fastpath (1 samples, 0.15%)</title><rect x="861.3" y="421" width="1.8" height="15.0" fill="rgb(220,80,48)" rx="2" ry="2" />
<text  x="864.35" y="431.5" ></text>
</g>
<g >
<title>read_tsc (1 samples, 0.15%)</title><rect x="34.5" y="165" width="1.7" height="15.0" fill="rgb(247,86,8)" rx="2" ry="2" />
<text  x="37.47" y="175.5" ></text>
</g>
<g >
<title>rw_verify_area (1 samples, 0.15%)</title><rect x="72.9" y="501" width="1.8" height="15.0" fill="rgb(254,186,11)" rx="2" ry="2" />
<text  x="75.93" y="511.5" ></text>
</g>
<g >
<title>do_futex (10 samples, 1.48%)</title><rect x="1172.5" y="517" width="17.5" height="15.0" fill="rgb(218,196,45)" rx="2" ry="2" />
<text  x="1175.52" y="527.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.59%)</title><rect x="609.6" y="405" width="7.0" height="15.0" fill="rgb(227,135,48)" rx="2" ry="2" />
<text  x="612.61" y="415.5" ></text>
</g>
<g >
<title>avc_has_perm_flags (1 samples, 0.15%)</title><rect x="72.9" y="421" width="1.8" height="15.0" fill="rgb(218,17,41)" rx="2" ry="2" />
<text  x="75.93" y="431.5" ></text>
</g>
<g >
<title>fget_light (1 samples, 0.15%)</title><rect x="599.1" y="533" width="1.8" height="15.0" fill="rgb(213,105,2)" rx="2" ry="2" />
<text  x="602.13" y="543.5" ></text>
</g>
<g >
<title>uprobe_deny_signal (1 samples, 0.15%)</title><rect x="606.1" y="469" width="1.8" height="15.0" fill="rgb(238,145,37)" rx="2" ry="2" />
<text  x="609.12" y="479.5" ></text>
</g>
<g >
<title>httpserver (675 samples, 100.00%)</title><rect x="10.0" y="581" width="1180.0" height="15.0" fill="rgb(235,98,15)" rx="2" ry="2" />
<text  x="13.00" y="591.5" >httpserver</text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.15%)</title><rect x="861.3" y="325" width="1.8" height="15.0" fill="rgb(245,56,38)" rx="2" ry="2" />
<text  x="864.35" y="335.5" ></text>
</g>
<g >
<title>int_signal (1 samples, 0.15%)</title><rect x="866.6" y="517" width="1.7" height="15.0" fill="rgb(246,50,3)" rx="2" ry="2" />
<text  x="869.59" y="527.5" ></text>
</g>
<g >
<title>http_conn::process_write (1 samples, 0.15%)</title><rect x="181.3" y="453" width="1.8" height="15.0" fill="rgb(212,5,54)" rx="2" ry="2" />
<text  x="184.32" y="463.5" ></text>
</g>
<g >
<title>ip_rcv_finish (20 samples, 2.96%)</title><rect x="38.0" y="149" width="34.9" height="15.0" fill="rgb(206,28,46)" rx="2" ry="2" />
<text  x="40.97" y="159.5" >ip..</text>
</g>
<g >
<title>nf_hook_slow (5 samples, 0.74%)</title><rect x="24.0" y="325" width="8.7" height="15.0" fill="rgb(250,121,12)" rx="2" ry="2" />
<text  x="26.99" y="335.5" ></text>
</g>
<g >
<title>iptable_mangle_hook (2 samples, 0.30%)</title><rect x="25.7" y="293" width="3.5" height="15.0" fill="rgb(213,105,23)" rx="2" ry="2" />
<text  x="28.73" y="303.5" ></text>
</g>
<g >
<title>dev_queue_xmit (1 samples, 0.15%)</title><rect x="34.5" y="309" width="1.7" height="15.0" fill="rgb(241,97,31)" rx="2" ry="2" />
<text  x="37.47" y="319.5" ></text>
</g>
<g >
<title>local_bh_disable (1 samples, 0.15%)</title><rect x="71.2" y="53" width="1.7" height="15.0" fill="rgb(213,93,21)" rx="2" ry="2" />
<text  x="74.19" y="63.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.15%)</title><rect x="216.3" y="549" width="1.7" height="15.0" fill="rgb(222,154,21)" rx="2" ry="2" />
<text  x="219.28" y="559.5" ></text>
</g>
<g >
<title>do_sync_write (33 samples, 4.89%)</title><rect x="15.2" y="501" width="57.7" height="15.0" fill="rgb(254,107,36)" rx="2" ry="2" />
<text  x="18.24" y="511.5" >do_syn..</text>
</g>
<g >
<title>sys_rt_sigreturn (1 samples, 0.15%)</title><rect x="607.9" y="501" width="1.7" height="15.0" fill="rgb(214,138,16)" rx="2" ry="2" />
<text  x="610.87" y="511.5" ></text>
</g>
<g >
<title>tcp_recvmsg (1 samples, 0.15%)</title><rect x="11.7" y="437" width="1.8" height="15.0" fill="rgb(212,80,50)" rx="2" ry="2" />
<text  x="14.75" y="447.5" ></text>
</g>
<g >
<title>vfprintf (1 samples, 0.15%)</title><rect x="214.5" y="533" width="1.8" height="15.0" fill="rgb(252,1,7)" rx="2" ry="2" />
<text  x="217.53" y="543.5" ></text>
</g>
<g >
<title>__lll_unlock_wake (8 samples, 1.19%)</title><rect x="74.7" y="485" width="14.0" height="15.0" fill="rgb(254,77,28)" rx="2" ry="2" />
<text  x="77.68" y="495.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.15%)</title><rect x="179.6" y="437" width="1.7" height="15.0" fill="rgb(223,51,50)" rx="2" ry="2" />
<text  x="182.57" y="447.5" ></text>
</g>
<g >
<title>sys_futex (1 samples, 0.15%)</title><rect x="861.3" y="405" width="1.8" height="15.0" fill="rgb(223,61,8)" rx="2" ry="2" />
<text  x="864.35" y="415.5" ></text>
</g>
<g >
<title>all (675 samples, 100%)</title><rect x="10.0" y="597" width="1180.0" height="15.0" fill="rgb(243,107,44)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>__ip_local_out_sk (5 samples, 0.74%)</title><rect x="24.0" y="341" width="8.7" height="15.0" fill="rgb(207,76,10)" rx="2" ry="2" />
<text  x="26.99" y="351.5" ></text>
</g>
<g >
<title>do_notify_resume (1 samples, 0.15%)</title><rect x="866.6" y="501" width="1.7" height="15.0" fill="rgb(250,155,23)" rx="2" ry="2" />
<text  x="869.59" y="511.5" ></text>
</g>
<g >
<title>system_call_fastpath (5 samples, 0.74%)</title><rect x="609.6" y="517" width="8.8" height="15.0" fill="rgb(206,38,3)" rx="2" ry="2" />
<text  x="612.61" y="527.5" ></text>
</g>
<g >
<title>pthread_cond_broadcast@@GLIBC_2.3.2 (137 samples, 20.30%)</title><rect x="621.9" y="501" width="239.4" height="15.0" fill="rgb(212,205,4)" rx="2" ry="2" />
<text  x="624.85" y="511.5" >pthread_cond_broadcast@@GLIBC_2..</text>
</g>
<g >
<title>__netif_receive_skb_core (20 samples, 2.96%)</title><rect x="38.0" y="181" width="34.9" height="15.0" fill="rgb(242,157,22)" rx="2" ry="2" />
<text  x="40.97" y="191.5" >__..</text>
</g>
<g >
<title>do_signal (1 samples, 0.15%)</title><rect x="864.8" y="485" width="1.8" height="15.0" fill="rgb(228,67,4)" rx="2" ry="2" />
<text  x="867.84" y="495.5" ></text>
</g>
<g >
<title>do_futex (137 samples, 20.30%)</title><rect x="621.9" y="453" width="239.4" height="15.0" fill="rgb(235,69,45)" rx="2" ry="2" />
<text  x="624.85" y="463.5" >do_futex</text>
</g>
<g >
<title>__tcp_push_pending_frames (30 samples, 4.44%)</title><rect x="20.5" y="421" width="52.4" height="15.0" fill="rgb(233,16,11)" rx="2" ry="2" />
<text  x="23.49" y="431.5" >__tcp..</text>
</g>
<g >
<title>ip_rcv (20 samples, 2.96%)</title><rect x="38.0" y="165" width="34.9" height="15.0" fill="rgb(235,155,44)" rx="2" ry="2" />
<text  x="40.97" y="175.5" >ip..</text>
</g>
<g >
<title>wake_up_q (165 samples, 24.44%)</title><rect x="878.8" y="485" width="288.5" height="15.0" fill="rgb(209,11,47)" rx="2" ry="2" />
<text  x="881.83" y="495.5" >wake_up_q</text>
</g>
<g >
<title>system_call_fastpath (37 samples, 5.48%)</title><rect x="10.0" y="549" width="64.7" height="15.0" fill="rgb(238,83,54)" rx="2" ry="2" />
<text  x="13.00" y="559.5" >system_..</text>
</g>
<g >
<title>tcp_event_new_data_sent (1 samples, 0.15%)</title><rect x="20.5" y="389" width="1.7" height="15.0" fill="rgb(249,214,34)" rx="2" ry="2" />
<text  x="23.49" y="399.5" ></text>
</g>
<g >
<title>do_send_sig_info (212 samples, 31.41%)</title><rect x="226.8" y="453" width="370.6" height="15.0" fill="rgb(217,38,32)" rx="2" ry="2" />
<text  x="229.77" y="463.5" >do_send_sig_info</text>
</g>
<g >
<title>check_kill_permission (2 samples, 0.30%)</title><rect x="223.3" y="453" width="3.5" height="15.0" fill="rgb(223,185,2)" rx="2" ry="2" />
<text  x="226.27" y="463.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::unique_lock (1 samples, 0.15%)</title><rect x="162.1" y="485" width="1.7" height="15.0" fill="rgb(216,162,15)" rx="2" ry="2" />
<text  x="165.09" y="495.5" ></text>
</g>
<g >
<title>system_call_fastpath (11 samples, 1.63%)</title><rect x="1170.8" y="549" width="19.2" height="15.0" fill="rgb(229,191,8)" rx="2" ry="2" />
<text  x="1173.77" y="559.5" ></text>
</g>
<g >
<title>avc_has_perm_flags (1 samples, 0.15%)</title><rect x="225.0" y="389" width="1.8" height="15.0" fill="rgb(208,35,21)" rx="2" ry="2" />
<text  x="228.02" y="399.5" ></text>
</g>
<g >
<title>nf_hook_slow (2 samples, 0.30%)</title><rect x="69.4" y="117" width="3.5" height="15.0" fill="rgb(232,48,30)" rx="2" ry="2" />
<text  x="72.44" y="127.5" ></text>
</g>
<g >
<title>sig_handler_aiowrite (1 samples, 0.15%)</title><rect x="866.6" y="533" width="1.7" height="15.0" fill="rgb(232,20,40)" rx="2" ry="2" />
<text  x="869.59" y="543.5" ></text>
</g>
<g >
<title>sys_newstat (6 samples, 0.89%)</title><rect x="169.1" y="405" width="10.5" height="15.0" fill="rgb(242,184,5)" rx="2" ry="2" />
<text  x="172.08" y="415.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.15%)</title><rect x="11.7" y="373" width="1.8" height="15.0" fill="rgb(208,163,25)" rx="2" ry="2" />
<text  x="14.75" y="383.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::~unique_lock (1 samples, 0.15%)</title><rect x="861.3" y="485" width="1.8" height="15.0" fill="rgb(243,125,5)" rx="2" ry="2" />
<text  x="864.35" y="495.5" ></text>
</g>
<g >
<title>futex_wake_op (168 samples, 24.89%)</title><rect x="873.6" y="501" width="293.7" height="15.0" fill="rgb(232,1,7)" rx="2" ry="2" />
<text  x="876.59" y="511.5" >futex_wake_op</text>
</g>
<g >
<title>save_xstate_sig (1 samples, 0.15%)</title><rect x="604.4" y="469" width="1.7" height="15.0" fill="rgb(250,165,21)" rx="2" ry="2" />
<text  x="607.37" y="479.5" ></text>
</g>
<g >
<title>httpresponse::add_content (1 samples, 0.15%)</title><rect x="181.3" y="437" width="1.8" height="15.0" fill="rgb(221,188,41)" rx="2" ry="2" />
<text  x="184.32" y="447.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.59%)</title><rect x="211.0" y="565" width="7.0" height="15.0" fill="rgb(240,228,0)" rx="2" ry="2" />
<text  x="214.04" y="575.5" ></text>
</g>
<g >
<title>__schedule (4 samples, 0.59%)</title><rect x="609.6" y="421" width="7.0" height="15.0" fill="rgb(225,67,19)" rx="2" ry="2" />
<text  x="612.61" y="431.5" ></text>
</g>
<g >
<title>tcp_write_xmit (30 samples, 4.44%)</title><rect x="20.5" y="405" width="52.4" height="15.0" fill="rgb(239,204,35)" rx="2" ry="2" />
<text  x="23.49" y="415.5" >tcp_w..</text>
</g>
</g>
</svg>
